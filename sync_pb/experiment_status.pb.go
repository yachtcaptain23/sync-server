// Code generated by protoc-gen-go. DO NOT EDIT.
// source: experiment_status.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This request allows an unauthenticated client to check the status of the
// experiments which do not require user authentication.  The status of an
// experiment for a specific client can be determined based on the user agent
// string and/or the client id sent in the HTTPS POST request.
type ExperimentStatusRequest struct {
	// Enumerates the experiments for which the status should be returned.  An
	// experiment name must be the same as one of the field names specified in
	// ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
	ExperimentName       []string `protobuf:"bytes,1,rep,name=experiment_name,json=experimentName" json:"experiment_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExperimentStatusRequest) Reset()         { *m = ExperimentStatusRequest{} }
func (m *ExperimentStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ExperimentStatusRequest) ProtoMessage()    {}
func (*ExperimentStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c608e2e95b328b, []int{0}
}

func (m *ExperimentStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExperimentStatusRequest.Unmarshal(m, b)
}
func (m *ExperimentStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExperimentStatusRequest.Marshal(b, m, deterministic)
}
func (m *ExperimentStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExperimentStatusRequest.Merge(m, src)
}
func (m *ExperimentStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ExperimentStatusRequest.Size(m)
}
func (m *ExperimentStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExperimentStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExperimentStatusRequest proto.InternalMessageInfo

func (m *ExperimentStatusRequest) GetExperimentName() []string {
	if m != nil {
		return m.ExperimentName
	}
	return nil
}

// Response to an experiment status request.
type ExperimentStatusResponse struct {
	// Minimal time to wait before issuing another request.
	PollIntervalSeconds *int32 `protobuf:"varint,1,opt,name=poll_interval_seconds,json=pollIntervalSeconds,def=3600" json:"poll_interval_seconds,omitempty"`
	// The experiments that the client has asked for, with each experiment
	// containing exactly one experiment flag.  The client can inspect the
	// embedded flag to obtain the experiment status.  Note that the number of
	// experiments should be less than or equal to the number of experiment_name
	// sent in the request since it is possible that there is no experiment
	// matching an experiment_name.
	Experiment           []*ExperimentsSpecifics `protobuf:"bytes,2,rep,name=experiment" json:"experiment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ExperimentStatusResponse) Reset()         { *m = ExperimentStatusResponse{} }
func (m *ExperimentStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ExperimentStatusResponse) ProtoMessage()    {}
func (*ExperimentStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c608e2e95b328b, []int{1}
}

func (m *ExperimentStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExperimentStatusResponse.Unmarshal(m, b)
}
func (m *ExperimentStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExperimentStatusResponse.Marshal(b, m, deterministic)
}
func (m *ExperimentStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExperimentStatusResponse.Merge(m, src)
}
func (m *ExperimentStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ExperimentStatusResponse.Size(m)
}
func (m *ExperimentStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExperimentStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExperimentStatusResponse proto.InternalMessageInfo

const Default_ExperimentStatusResponse_PollIntervalSeconds int32 = 3600

func (m *ExperimentStatusResponse) GetPollIntervalSeconds() int32 {
	if m != nil && m.PollIntervalSeconds != nil {
		return *m.PollIntervalSeconds
	}
	return Default_ExperimentStatusResponse_PollIntervalSeconds
}

func (m *ExperimentStatusResponse) GetExperiment() []*ExperimentsSpecifics {
	if m != nil {
		return m.Experiment
	}
	return nil
}

func init() {
	proto.RegisterType((*ExperimentStatusRequest)(nil), "sync_pb.ExperimentStatusRequest")
	proto.RegisterType((*ExperimentStatusResponse)(nil), "sync_pb.ExperimentStatusResponse")
}

func init() {
	proto.RegisterFile("experiment_status.proto", fileDescriptor_f7c608e2e95b328b)
}

var fileDescriptor_f7c608e2e95b328b = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0xd1, 0x4a, 0xc4, 0x30,
	0x10, 0x45, 0x89, 0x55, 0xc4, 0x11, 0x14, 0x2a, 0xb2, 0x45, 0x11, 0xca, 0x82, 0x58, 0x10, 0xc2,
	0xa2, 0x20, 0x22, 0xf8, 0xb2, 0x20, 0xe8, 0x8b, 0x48, 0xfb, 0x01, 0xa1, 0xc6, 0x51, 0x03, 0x4d,
	0x26, 0x66, 0x52, 0xd1, 0xef, 0xf0, 0x87, 0x65, 0x77, 0xab, 0x29, 0xec, 0xeb, 0xcc, 0xb9, 0xf7,
	0x72, 0x60, 0x82, 0x5f, 0x1e, 0x83, 0xb1, 0xe8, 0xa2, 0xe2, 0xd8, 0xc6, 0x9e, 0xa5, 0x0f, 0x14,
	0x29, 0xdf, 0xe6, 0x6f, 0xa7, 0x95, 0x7f, 0x3e, 0x3a, 0x4e, 0x04, 0x2b, 0xf6, 0xa8, 0xcd, 0xab,
	0xd1, 0x03, 0x35, 0x9d, 0xc3, 0xe4, 0xee, 0xff, 0xdd, 0x2c, 0xf3, 0x35, 0x7e, 0xf4, 0xc8, 0x31,
	0x3f, 0x83, 0xfd, 0x51, 0xb7, 0x6b, 0x2d, 0x16, 0xa2, 0xcc, 0xaa, 0x9d, 0x7a, 0x2f, 0x9d, 0x1f,
	0x5b, 0x8b, 0xd3, 0x1f, 0x01, 0xc5, 0x7a, 0x09, 0x7b, 0x72, 0x8c, 0xf9, 0x35, 0x1c, 0x7a, 0xea,
	0x3a, 0x65, 0x5c, 0xc4, 0xf0, 0xd9, 0x76, 0x8a, 0x51, 0x93, 0x7b, 0xe1, 0x42, 0x94, 0xa2, 0xda,
	0xba, 0xd9, 0xbc, 0xbc, 0x9a, 0xcd, 0xea, 0x83, 0x05, 0xf2, 0x30, 0x10, 0xcd, 0x0a, 0xc8, 0x6f,
	0x01, 0xd2, 0x50, 0xb1, 0x51, 0x66, 0xd5, 0xee, 0xc5, 0x89, 0x1c, 0xac, 0x64, 0x1a, 0xe4, 0xe6,
	0xcf, 0xa9, 0x1e, 0x05, 0xe6, 0xe7, 0x70, 0x4a, 0xe1, 0x4d, 0xea, 0xf7, 0x40, 0xd6, 0xf4, 0x56,
	0x6a, 0xb2, 0x9e, 0xdc, 0x82, 0x5f, 0x76, 0xac, 0xfc, 0x35, 0x75, 0xf7, 0xd9, 0x93, 0xf8, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x06, 0x92, 0xcc, 0x83, 0x46, 0x01, 0x00, 0x00,
}
