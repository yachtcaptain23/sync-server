// Code generated by protoc-gen-go. DO NOT EDIT.
// source: managed_user_shared_setting_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Properties of managed user shared setting sync objects.
type ManagedUserSharedSettingSpecifics struct {
	// The MU ID for the managed user to whom the setting applies.
	MuId *string `protobuf:"bytes,1,opt,name=mu_id,json=muId" json:"mu_id,omitempty"`
	// The key of the setting.
	Key *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// The setting value. The setting is a JSON encoding of an arbitrary
	// Javascript value.
	Value *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	// This flag is set by the server to acknowledge that it has committed a
	// change to a setting.
	Acknowledged         *bool    `protobuf:"varint,4,opt,name=acknowledged,def=0" json:"acknowledged,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedUserSharedSettingSpecifics) Reset()         { *m = ManagedUserSharedSettingSpecifics{} }
func (m *ManagedUserSharedSettingSpecifics) String() string { return proto.CompactTextString(m) }
func (*ManagedUserSharedSettingSpecifics) ProtoMessage()    {}
func (*ManagedUserSharedSettingSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_2999bcb93cd75ef5, []int{0}
}

func (m *ManagedUserSharedSettingSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedUserSharedSettingSpecifics.Unmarshal(m, b)
}
func (m *ManagedUserSharedSettingSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedUserSharedSettingSpecifics.Marshal(b, m, deterministic)
}
func (m *ManagedUserSharedSettingSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedUserSharedSettingSpecifics.Merge(m, src)
}
func (m *ManagedUserSharedSettingSpecifics) XXX_Size() int {
	return xxx_messageInfo_ManagedUserSharedSettingSpecifics.Size(m)
}
func (m *ManagedUserSharedSettingSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedUserSharedSettingSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedUserSharedSettingSpecifics proto.InternalMessageInfo

const Default_ManagedUserSharedSettingSpecifics_Acknowledged bool = false

func (m *ManagedUserSharedSettingSpecifics) GetMuId() string {
	if m != nil && m.MuId != nil {
		return *m.MuId
	}
	return ""
}

func (m *ManagedUserSharedSettingSpecifics) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *ManagedUserSharedSettingSpecifics) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *ManagedUserSharedSettingSpecifics) GetAcknowledged() bool {
	if m != nil && m.Acknowledged != nil {
		return *m.Acknowledged
	}
	return Default_ManagedUserSharedSettingSpecifics_Acknowledged
}

func init() {
	proto.RegisterType((*ManagedUserSharedSettingSpecifics)(nil), "sync_pb.ManagedUserSharedSettingSpecifics")
}

func init() {
	proto.RegisterFile("managed_user_shared_setting_specifics.proto", fileDescriptor_2999bcb93cd75ef5)
}

var fileDescriptor_2999bcb93cd75ef5 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xce, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x06, 0x60, 0xe2, 0xde, 0xa2, 0x06, 0x0b, 0x89, 0x16, 0x5b, 0x9e, 0x82, 0x70, 0x72, 0xb0,
	0x0f, 0x60, 0x69, 0xa5, 0x85, 0x20, 0xb7, 0x58, 0x87, 0x98, 0xcc, 0xe5, 0xc2, 0x25, 0x99, 0x90,
	0x49, 0x94, 0x7b, 0x06, 0x5f, 0x5a, 0x76, 0x83, 0x85, 0xdd, 0xcc, 0xff, 0xf3, 0xc1, 0xcf, 0xb7,
	0x41, 0x45, 0x65, 0xc1, 0xc8, 0x4a, 0x90, 0x25, 0x1d, 0x54, 0x06, 0x23, 0x09, 0x4a, 0x71, 0xd1,
	0x4a, 0x4a, 0xa0, 0xdd, 0xde, 0x69, 0x1a, 0x53, 0xc6, 0x82, 0xe2, 0x9c, 0x4e, 0x51, 0xcb, 0xf4,
	0x79, 0xff, 0xc3, 0xf8, 0xdd, 0x5b, 0x83, 0x1f, 0x04, 0x79, 0x5a, 0xd8, 0xd4, 0xd4, 0xf4, 0x87,
	0xc4, 0x0d, 0xef, 0x43, 0x95, 0xce, 0x0c, 0x6c, 0xcd, 0x36, 0x97, 0xbb, 0x55, 0xa8, 0xaf, 0x46,
	0x5c, 0xf3, 0xee, 0x08, 0xa7, 0xe1, 0x6c, 0x89, 0xe6, 0x53, 0xdc, 0xf2, 0xfe, 0x4b, 0xf9, 0x0a,
	0x43, 0xb7, 0x64, 0xed, 0x11, 0x8f, 0xfc, 0x4a, 0xe9, 0x63, 0xc4, 0x6f, 0x0f, 0xc6, 0x82, 0x19,
	0x56, 0x6b, 0xb6, 0xb9, 0x78, 0xea, 0xf7, 0xca, 0x13, 0xec, 0xfe, 0x55, 0xcf, 0x5b, 0xfe, 0x80,
	0xd9, 0x8e, 0xfa, 0x90, 0x31, 0xb8, 0x1a, 0x46, 0x8d, 0x21, 0x61, 0x84, 0x58, 0x68, 0x9c, 0x07,
	0xb7, 0xf1, 0x1a, 0xfd, 0x4b, 0xf7, 0xce, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x29, 0x3d, 0xb9,
	0x2b, 0xf1, 0x00, 0x00, 0x00,
}
