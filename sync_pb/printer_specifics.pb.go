// Code generated by protoc-gen-go. DO NOT EDIT.
// source: printer_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// User PPD configuration
type PrinterPPDReference struct {
	// Url for user provided file.  Overrides other fields.
	UserSuppliedPpdUrl *string `protobuf:"bytes,1,opt,name=user_supplied_ppd_url,json=userSuppliedPpdUrl" json:"user_supplied_ppd_url,omitempty"`
	// Retired fields
	EffectiveManufacturer *string `protobuf:"bytes,2,opt,name=effective_manufacturer,json=effectiveManufacturer" json:"effective_manufacturer,omitempty"` // Deprecated: Do not use.
	EffectiveModel        *string `protobuf:"bytes,3,opt,name=effective_model,json=effectiveModel" json:"effective_model,omitempty"`                      // Deprecated: Do not use.
	// String identifying the type of printer, used to look up a ppd to drive the
	// printer.
	EffectiveMakeAndModel *string `protobuf:"bytes,4,opt,name=effective_make_and_model,json=effectiveMakeAndModel" json:"effective_make_and_model,omitempty"`
	// True if the printer should be automatically configured, false otherwise.
	Autoconf             *bool    `protobuf:"varint,5,opt,name=autoconf,def=0" json:"autoconf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrinterPPDReference) Reset()         { *m = PrinterPPDReference{} }
func (m *PrinterPPDReference) String() string { return proto.CompactTextString(m) }
func (*PrinterPPDReference) ProtoMessage()    {}
func (*PrinterPPDReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dc374698a04632, []int{0}
}

func (m *PrinterPPDReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrinterPPDReference.Unmarshal(m, b)
}
func (m *PrinterPPDReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrinterPPDReference.Marshal(b, m, deterministic)
}
func (m *PrinterPPDReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrinterPPDReference.Merge(m, src)
}
func (m *PrinterPPDReference) XXX_Size() int {
	return xxx_messageInfo_PrinterPPDReference.Size(m)
}
func (m *PrinterPPDReference) XXX_DiscardUnknown() {
	xxx_messageInfo_PrinterPPDReference.DiscardUnknown(m)
}

var xxx_messageInfo_PrinterPPDReference proto.InternalMessageInfo

const Default_PrinterPPDReference_Autoconf bool = false

func (m *PrinterPPDReference) GetUserSuppliedPpdUrl() string {
	if m != nil && m.UserSuppliedPpdUrl != nil {
		return *m.UserSuppliedPpdUrl
	}
	return ""
}

// Deprecated: Do not use.
func (m *PrinterPPDReference) GetEffectiveManufacturer() string {
	if m != nil && m.EffectiveManufacturer != nil {
		return *m.EffectiveManufacturer
	}
	return ""
}

// Deprecated: Do not use.
func (m *PrinterPPDReference) GetEffectiveModel() string {
	if m != nil && m.EffectiveModel != nil {
		return *m.EffectiveModel
	}
	return ""
}

func (m *PrinterPPDReference) GetEffectiveMakeAndModel() string {
	if m != nil && m.EffectiveMakeAndModel != nil {
		return *m.EffectiveMakeAndModel
	}
	return ""
}

func (m *PrinterPPDReference) GetAutoconf() bool {
	if m != nil && m.Autoconf != nil {
		return *m.Autoconf
	}
	return Default_PrinterPPDReference_Autoconf
}

type PrinterSpecifics struct {
	// Printer record GUID
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// User visible name.  Any string.
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// User visible description.  Any string.
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Printer manufacturer.  Should be a known manufacturuer.
	// Deprecated in favor of make_and_model.
	Manufacturer *string `protobuf:"bytes,4,opt,name=manufacturer" json:"manufacturer,omitempty"` // Deprecated: Do not use.
	// Printer model.  Should match a known model for the manufacturer.
	// Deprecated in favor of make_and_model.
	Model *string `protobuf:"bytes,5,opt,name=model" json:"model,omitempty"` // Deprecated: Do not use.
	// Universal Resource Identifier for the printer on the network.  usb:// will
	// be the scheme for USB printers.  Example
	// ipp://address.example:port/queue/queue/queue.
	Uri *string `protobuf:"bytes,6,opt,name=uri" json:"uri,omitempty"`
	// Universally Unique Identifier provided by the printer.  Used for unique
	// identification of printers in a zeroconf environment.
	Uuid *string `protobuf:"bytes,7,opt,name=uuid" json:"uuid,omitempty"`
	// PPDData was deprecated in favor of PPDReference format.
	Ppd []byte `protobuf:"bytes,8,opt,name=ppd" json:"ppd,omitempty"` // Deprecated: Do not use.
	// Structure representing the user's ppd configuration.
	PpdReference *PrinterPPDReference `protobuf:"bytes,9,opt,name=ppd_reference,json=ppdReference" json:"ppd_reference,omitempty"`
	// Timestamp when printer was last updated.
	UpdatedTimestamp *int64 `protobuf:"varint,10,opt,name=updated_timestamp,json=updatedTimestamp" json:"updated_timestamp,omitempty"`
	// The make and model of the printer in one string.  The typical arrangement
	// for this is '<make> <model>'.  This aligns with the typical formatting of
	// the IPP attribute printer-make-and-model.
	MakeAndModel         *string  `protobuf:"bytes,11,opt,name=make_and_model,json=makeAndModel" json:"make_and_model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrinterSpecifics) Reset()         { *m = PrinterSpecifics{} }
func (m *PrinterSpecifics) String() string { return proto.CompactTextString(m) }
func (*PrinterSpecifics) ProtoMessage()    {}
func (*PrinterSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dc374698a04632, []int{1}
}

func (m *PrinterSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrinterSpecifics.Unmarshal(m, b)
}
func (m *PrinterSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrinterSpecifics.Marshal(b, m, deterministic)
}
func (m *PrinterSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrinterSpecifics.Merge(m, src)
}
func (m *PrinterSpecifics) XXX_Size() int {
	return xxx_messageInfo_PrinterSpecifics.Size(m)
}
func (m *PrinterSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_PrinterSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_PrinterSpecifics proto.InternalMessageInfo

func (m *PrinterSpecifics) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *PrinterSpecifics) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *PrinterSpecifics) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

// Deprecated: Do not use.
func (m *PrinterSpecifics) GetManufacturer() string {
	if m != nil && m.Manufacturer != nil {
		return *m.Manufacturer
	}
	return ""
}

// Deprecated: Do not use.
func (m *PrinterSpecifics) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *PrinterSpecifics) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *PrinterSpecifics) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

// Deprecated: Do not use.
func (m *PrinterSpecifics) GetPpd() []byte {
	if m != nil {
		return m.Ppd
	}
	return nil
}

func (m *PrinterSpecifics) GetPpdReference() *PrinterPPDReference {
	if m != nil {
		return m.PpdReference
	}
	return nil
}

func (m *PrinterSpecifics) GetUpdatedTimestamp() int64 {
	if m != nil && m.UpdatedTimestamp != nil {
		return *m.UpdatedTimestamp
	}
	return 0
}

func (m *PrinterSpecifics) GetMakeAndModel() string {
	if m != nil && m.MakeAndModel != nil {
		return *m.MakeAndModel
	}
	return ""
}

func init() {
	proto.RegisterType((*PrinterPPDReference)(nil), "sync_pb.PrinterPPDReference")
	proto.RegisterType((*PrinterSpecifics)(nil), "sync_pb.PrinterSpecifics")
}

func init() {
	proto.RegisterFile("printer_specifics.proto", fileDescriptor_86dc374698a04632)
}

var fileDescriptor_86dc374698a04632 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x86, 0x95, 0x64, 0x97, 0x6e, 0x67, 0xc3, 0xb2, 0x18, 0x0a, 0x3e, 0x70, 0x48, 0x2b, 0x40,
	0x91, 0x56, 0x8a, 0x04, 0x17, 0x04, 0xb7, 0x56, 0x1c, 0xb8, 0x80, 0xa2, 0x14, 0xce, 0x91, 0xb1,
	0x27, 0x60, 0x35, 0xb1, 0x2d, 0x7f, 0x20, 0xf5, 0x3f, 0xf0, 0x8f, 0xb9, 0xa0, 0x7c, 0x6c, 0x9a,
	0x22, 0x6e, 0xce, 0x3b, 0xf3, 0x64, 0xe6, 0x9d, 0x19, 0x78, 0x6e, 0xac, 0x54, 0x1e, 0x6d, 0xed,
	0x0c, 0x72, 0xd9, 0x48, 0xee, 0x0a, 0x63, 0xb5, 0xd7, 0xe4, 0xc4, 0xdd, 0x2a, 0x5e, 0x9b, 0xef,
	0x17, 0xbf, 0x63, 0x78, 0x52, 0x8e, 0x49, 0x65, 0xf9, 0xb1, 0xc2, 0x06, 0x2d, 0x2a, 0x8e, 0xe4,
	0x0d, 0x9c, 0x05, 0xd7, 0x83, 0xc1, 0x98, 0x56, 0xa2, 0xa8, 0x8d, 0x11, 0x75, 0xb0, 0x2d, 0x8d,
	0xb2, 0x28, 0x3f, 0xad, 0x48, 0x1f, 0xbc, 0x9e, 0x62, 0xa5, 0x11, 0xdf, 0x6c, 0x4b, 0xde, 0xc3,
	0x33, 0x6c, 0x1a, 0xe4, 0x5e, 0xfe, 0xc2, 0xba, 0x63, 0x2a, 0x34, 0x8c, 0xfb, 0x60, 0xd1, 0xd2,
	0xb8, 0x67, 0xae, 0x62, 0x1a, 0x55, 0x67, 0x73, 0xc6, 0xe7, 0x45, 0x02, 0x39, 0xc0, 0xa3, 0x05,
	0xaa, 0x05, 0xb6, 0x34, 0x99, 0x99, 0xdd, 0x1d, 0xd3, 0x47, 0xc8, 0x3b, 0xa0, 0xcb, 0x3a, 0x37,
	0x58, 0x33, 0x25, 0x26, 0x6a, 0x35, 0x74, 0xb7, 0xac, 0x72, 0x83, 0x97, 0x4a, 0x8c, 0xe0, 0x39,
	0x6c, 0x58, 0xf0, 0x9a, 0x6b, 0xd5, 0xd0, 0x75, 0x16, 0xe5, 0x9b, 0x0f, 0xeb, 0x86, 0xb5, 0x0e,
	0xab, 0x59, 0xbe, 0xf8, 0x13, 0xc3, 0x7e, 0x1a, 0xc7, 0xf5, 0x71, 0x64, 0x64, 0x07, 0xb1, 0x14,
	0x93, 0xf1, 0x58, 0x0a, 0x72, 0x0e, 0xa9, 0x90, 0xce, 0xb4, 0xec, 0xb6, 0x56, 0xac, 0xc3, 0xd1,
	0x5e, 0xb5, 0x9d, 0xb4, 0x2f, 0xac, 0x43, 0x92, 0xc1, 0x56, 0xa0, 0xe3, 0x56, 0x1a, 0x2f, 0xb5,
	0x1a, 0xcd, 0x54, 0x4b, 0x89, 0xbc, 0x86, 0xf4, 0xde, 0x8c, 0x56, 0xb3, 0xdf, 0x7b, 0x3a, 0xa1,
	0xb0, 0x1e, 0xad, 0xad, 0xe7, 0x84, 0x51, 0x20, 0x7b, 0x48, 0x82, 0x95, 0xf4, 0xc1, 0xf0, 0xef,
	0xfe, 0x49, 0x08, 0xac, 0x42, 0x90, 0x82, 0x9e, 0x0c, 0xd2, 0xf0, 0x26, 0x4f, 0x21, 0x31, 0x46,
	0xd0, 0x4d, 0x16, 0xe5, 0xe9, 0x40, 0xf7, 0x9f, 0xe4, 0x12, 0x1e, 0xf6, 0x0b, 0xb5, 0xc7, 0x7d,
	0xd3, 0xd3, 0x2c, 0xca, 0xb7, 0x6f, 0x5f, 0x14, 0xd3, 0x5d, 0x14, 0xff, 0xb9, 0x89, 0x2a, 0x35,
	0x46, 0xdc, 0x5d, 0xc8, 0x01, 0x1e, 0x07, 0x23, 0x98, 0x47, 0x51, 0x7b, 0xd9, 0xa1, 0xf3, 0xac,
	0x33, 0x14, 0xb2, 0x28, 0x4f, 0xaa, 0xfd, 0x14, 0xf8, 0x7a, 0xd4, 0xc9, 0x4b, 0xd8, 0xfd, 0xb3,
	0xa9, 0xed, 0xd0, 0x63, 0xda, 0x2d, 0x16, 0x74, 0x75, 0x80, 0x57, 0xda, 0xfe, 0x28, 0xf8, 0x4f,
	0xab, 0x3b, 0x19, 0xba, 0x82, 0xeb, 0xce, 0x68, 0x85, 0xca, 0xbb, 0xa1, 0xaf, 0xf1, 0x76, 0xb9,
	0x6e, 0x3f, 0x25, 0x65, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xdc, 0x9f, 0x15, 0xdc, 0x02,
	0x00, 0x00,
}
