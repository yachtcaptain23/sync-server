// Code generated by protoc-gen-go. DO NOT EDIT.
// source: theme_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Properties of theme sync objects.
type ThemeSpecifics struct {
	// If set, we're using a extension and all custom_* fields should be
	// present.  If not set, and all custom_* fields should be omitted.
	UseCustomTheme *bool `protobuf:"varint,1,opt,name=use_custom_theme,json=useCustomTheme" json:"use_custom_theme,omitempty"`
	// This field is only set (i.e., not cleared) on platforms that have
	// a distinction between the system theme and the default theme, but
	// other platforms must be careful to pass through the set state (not
	// just the value) of this flag.
	//
	// If true, we use the system theme by default (i.e., when we don't use
	// a custom theme) for platforms that make a distinction between the
	// default theme and the system theme.  Has no effect if use_custom_theme
	// is set.
	UseSystemThemeByDefault *bool `protobuf:"varint,2,opt,name=use_system_theme_by_default,json=useSystemThemeByDefault" json:"use_system_theme_by_default,omitempty"`
	// TODO(gayane): Migrate custom_* fields to a separate message.
	// Extension specific fields. Ignored if |autogenerated_theme| is set.
	CustomThemeName      *string `protobuf:"bytes,3,opt,name=custom_theme_name,json=customThemeName" json:"custom_theme_name,omitempty"`
	CustomThemeId        *string `protobuf:"bytes,4,opt,name=custom_theme_id,json=customThemeId" json:"custom_theme_id,omitempty"`
	CustomThemeUpdateUrl *string `protobuf:"bytes,5,opt,name=custom_theme_update_url,json=customThemeUpdateUrl" json:"custom_theme_update_url,omitempty"`
	// If set, autogenerated theme is used.
	AutogeneratedTheme   *ThemeSpecifics_AutogeneratedTheme `protobuf:"bytes,6,opt,name=autogenerated_theme,json=autogeneratedTheme" json:"autogenerated_theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ThemeSpecifics) Reset()         { *m = ThemeSpecifics{} }
func (m *ThemeSpecifics) String() string { return proto.CompactTextString(m) }
func (*ThemeSpecifics) ProtoMessage()    {}
func (*ThemeSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a7b8364f2e938e, []int{0}
}

func (m *ThemeSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThemeSpecifics.Unmarshal(m, b)
}
func (m *ThemeSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThemeSpecifics.Marshal(b, m, deterministic)
}
func (m *ThemeSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeSpecifics.Merge(m, src)
}
func (m *ThemeSpecifics) XXX_Size() int {
	return xxx_messageInfo_ThemeSpecifics.Size(m)
}
func (m *ThemeSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeSpecifics proto.InternalMessageInfo

func (m *ThemeSpecifics) GetUseCustomTheme() bool {
	if m != nil && m.UseCustomTheme != nil {
		return *m.UseCustomTheme
	}
	return false
}

func (m *ThemeSpecifics) GetUseSystemThemeByDefault() bool {
	if m != nil && m.UseSystemThemeByDefault != nil {
		return *m.UseSystemThemeByDefault
	}
	return false
}

func (m *ThemeSpecifics) GetCustomThemeName() string {
	if m != nil && m.CustomThemeName != nil {
		return *m.CustomThemeName
	}
	return ""
}

func (m *ThemeSpecifics) GetCustomThemeId() string {
	if m != nil && m.CustomThemeId != nil {
		return *m.CustomThemeId
	}
	return ""
}

func (m *ThemeSpecifics) GetCustomThemeUpdateUrl() string {
	if m != nil && m.CustomThemeUpdateUrl != nil {
		return *m.CustomThemeUpdateUrl
	}
	return ""
}

func (m *ThemeSpecifics) GetAutogeneratedTheme() *ThemeSpecifics_AutogeneratedTheme {
	if m != nil {
		return m.AutogeneratedTheme
	}
	return nil
}

type ThemeSpecifics_AutogeneratedTheme struct {
	// SkColor used to autogenerate theme.
	Color                *uint32  `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThemeSpecifics_AutogeneratedTheme) Reset()         { *m = ThemeSpecifics_AutogeneratedTheme{} }
func (m *ThemeSpecifics_AutogeneratedTheme) String() string { return proto.CompactTextString(m) }
func (*ThemeSpecifics_AutogeneratedTheme) ProtoMessage()    {}
func (*ThemeSpecifics_AutogeneratedTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_19a7b8364f2e938e, []int{0, 0}
}

func (m *ThemeSpecifics_AutogeneratedTheme) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThemeSpecifics_AutogeneratedTheme.Unmarshal(m, b)
}
func (m *ThemeSpecifics_AutogeneratedTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThemeSpecifics_AutogeneratedTheme.Marshal(b, m, deterministic)
}
func (m *ThemeSpecifics_AutogeneratedTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeSpecifics_AutogeneratedTheme.Merge(m, src)
}
func (m *ThemeSpecifics_AutogeneratedTheme) XXX_Size() int {
	return xxx_messageInfo_ThemeSpecifics_AutogeneratedTheme.Size(m)
}
func (m *ThemeSpecifics_AutogeneratedTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeSpecifics_AutogeneratedTheme.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeSpecifics_AutogeneratedTheme proto.InternalMessageInfo

func (m *ThemeSpecifics_AutogeneratedTheme) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func init() {
	proto.RegisterType((*ThemeSpecifics)(nil), "sync_pb.ThemeSpecifics")
	proto.RegisterType((*ThemeSpecifics_AutogeneratedTheme)(nil), "sync_pb.ThemeSpecifics.AutogeneratedTheme")
}

func init() {
	proto.RegisterFile("theme_specifics.proto", fileDescriptor_19a7b8364f2e938e)
}

var fileDescriptor_19a7b8364f2e938e = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd1, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0x07, 0x70, 0xf2, 0xf4, 0xa9, 0x2f, 0x2b, 0x6d, 0x75, 0xad, 0x34, 0xe8, 0x25, 0x08, 0x4a,
	0x88, 0xb0, 0x07, 0xc1, 0x9b, 0x17, 0xab, 0x07, 0xbd, 0x88, 0xa4, 0xf6, 0xe4, 0x61, 0xd9, 0x6e,
	0xa6, 0x6d, 0x20, 0x9b, 0x0d, 0xfb, 0x72, 0xc8, 0x77, 0xf0, 0x43, 0x4b, 0x27, 0x11, 0x13, 0x7a,
	0xdc, 0x99, 0xdf, 0x9f, 0xd9, 0x9d, 0x25, 0x17, 0x6e, 0x0b, 0x0a, 0xb8, 0xad, 0x40, 0xe6, 0xeb,
	0x5c, 0x5a, 0x56, 0x19, 0xed, 0x34, 0x3d, 0xb4, 0x75, 0x29, 0x79, 0xb5, 0xba, 0xfe, 0x1e, 0x90,
	0xf1, 0xe7, 0x8e, 0x2c, 0x7e, 0x05, 0x8d, 0xc9, 0xa9, 0xb7, 0xc0, 0xa5, 0xb7, 0x4e, 0x2b, 0x8e,
	0xf9, 0x30, 0x88, 0x82, 0xf8, 0x28, 0x1d, 0x7b, 0x0b, 0xcf, 0x58, 0xc6, 0x08, 0x7d, 0x24, 0x57,
	0x3b, 0x69, 0x6b, 0xeb, 0xa0, 0x95, 0x7c, 0x55, 0xf3, 0x0c, 0xd6, 0xc2, 0x17, 0x2e, 0xfc, 0x87,
	0xa1, 0x99, 0xb7, 0xb0, 0x40, 0x81, 0xa1, 0x79, 0xfd, 0xd2, 0xb4, 0x69, 0x42, 0xce, 0xba, 0x33,
	0x78, 0x29, 0x14, 0x84, 0x83, 0x28, 0x88, 0x8f, 0xd3, 0x89, 0xfc, 0x9b, 0xf2, 0x2e, 0x14, 0xd0,
	0x5b, 0x32, 0xe9, 0xd9, 0x3c, 0x0b, 0xff, 0xa3, 0x1c, 0x75, 0xe4, 0x5b, 0x46, 0x1f, 0xc8, 0xac,
	0xe7, 0x7c, 0x95, 0x09, 0x07, 0xdc, 0x9b, 0x22, 0x1c, 0xa2, 0x9f, 0x76, 0xfc, 0x12, 0x9b, 0x4b,
	0x53, 0xd0, 0x2f, 0x72, 0x2e, 0xbc, 0xd3, 0x1b, 0x28, 0xc1, 0x08, 0x07, 0x59, 0xfb, 0xea, 0x83,
	0x28, 0x88, 0x4f, 0xee, 0x13, 0xd6, 0x2e, 0x8b, 0xf5, 0x17, 0xc5, 0x9e, 0xba, 0x11, 0xec, 0xa5,
	0x54, 0xec, 0xd5, 0x2e, 0x13, 0x42, 0xf7, 0x25, 0x9d, 0x92, 0xa1, 0xd4, 0x85, 0x36, 0xb8, 0xda,
	0x51, 0xda, 0x1c, 0xe6, 0x77, 0xe4, 0x46, 0x9b, 0x0d, 0x93, 0x5b, 0xa3, 0x55, 0xee, 0x15, 0x93,
	0x5a, 0x55, 0xba, 0x84, 0xd2, 0x59, 0xbc, 0x44, 0xf3, 0x7b, 0x52, 0x17, 0xaf, 0x83, 0x8f, 0xe0,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xc9, 0xec, 0x51, 0xdc, 0x01, 0x00, 0x00,
}
