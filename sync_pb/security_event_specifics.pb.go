// Code generated by protoc-gen-go. DO NOT EDIT.
// source: security_event_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SecurityEventSpecifics struct {
	// The specific security event to record.
	//
	// Types that are valid to be assigned to Event:
	//	*SecurityEventSpecifics_GaiaPasswordReuseEvent
	Event isSecurityEventSpecifics_Event `protobuf_oneof:"event"`
	// Time of event, as measured by client in microseconds since Windows epoch.
	EventTimeUsec        *int64   `protobuf:"varint,2,opt,name=event_time_usec,json=eventTimeUsec" json:"event_time_usec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityEventSpecifics) Reset()         { *m = SecurityEventSpecifics{} }
func (m *SecurityEventSpecifics) String() string { return proto.CompactTextString(m) }
func (*SecurityEventSpecifics) ProtoMessage()    {}
func (*SecurityEventSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_b99ba821811808bc, []int{0}
}

func (m *SecurityEventSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityEventSpecifics.Unmarshal(m, b)
}
func (m *SecurityEventSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityEventSpecifics.Marshal(b, m, deterministic)
}
func (m *SecurityEventSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityEventSpecifics.Merge(m, src)
}
func (m *SecurityEventSpecifics) XXX_Size() int {
	return xxx_messageInfo_SecurityEventSpecifics.Size(m)
}
func (m *SecurityEventSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityEventSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityEventSpecifics proto.InternalMessageInfo

type isSecurityEventSpecifics_Event interface {
	isSecurityEventSpecifics_Event()
}

type SecurityEventSpecifics_GaiaPasswordReuseEvent struct {
	GaiaPasswordReuseEvent *GaiaPasswordReuse `protobuf:"bytes,1,opt,name=gaia_password_reuse_event,json=gaiaPasswordReuseEvent,oneof"`
}

func (*SecurityEventSpecifics_GaiaPasswordReuseEvent) isSecurityEventSpecifics_Event() {}

func (m *SecurityEventSpecifics) GetEvent() isSecurityEventSpecifics_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *SecurityEventSpecifics) GetGaiaPasswordReuseEvent() *GaiaPasswordReuse {
	if x, ok := m.GetEvent().(*SecurityEventSpecifics_GaiaPasswordReuseEvent); ok {
		return x.GaiaPasswordReuseEvent
	}
	return nil
}

func (m *SecurityEventSpecifics) GetEventTimeUsec() int64 {
	if m != nil && m.EventTimeUsec != nil {
		return *m.EventTimeUsec
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SecurityEventSpecifics) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SecurityEventSpecifics_GaiaPasswordReuseEvent)(nil),
	}
}

func init() {
	proto.RegisterType((*SecurityEventSpecifics)(nil), "sync_pb.SecurityEventSpecifics")
}

func init() {
	proto.RegisterFile("security_event_specifics.proto", fileDescriptor_b99ba821811808bc)
}

var fileDescriptor_b99ba821811808bc = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x8d, 0x45, 0x0a, 0x11, 0x11, 0xf6, 0x50, 0x6a, 0x0f, 0x52, 0x04, 0xa5, 0x20, 0xe4,
	0xe0, 0x23, 0x14, 0xc4, 0x1e, 0xcb, 0x56, 0xf1, 0x18, 0xe2, 0x38, 0xae, 0x03, 0x26, 0x13, 0x32,
	0x89, 0xd2, 0xd7, 0xf1, 0x49, 0xa5, 0xc9, 0x7a, 0x11, 0xaf, 0x3f, 0x5f, 0xbe, 0x2f, 0xa3, 0x2f,
	0x05, 0xa1, 0x24, 0xca, 0x7b, 0x8b, 0x9f, 0x18, 0xb2, 0x95, 0x88, 0x40, 0x6f, 0x04, 0x62, 0x62,
	0xe2, 0xcc, 0xdd, 0x54, 0xf6, 0x01, 0x6c, 0x7c, 0x59, 0x5c, 0x0c, 0x8e, 0x9c, 0x8d, 0x4e, 0xe4,
	0x8b, 0xd3, 0xab, 0x4d, 0x58, 0x04, 0x1b, 0x73, 0xf5, 0xad, 0xf4, 0x6c, 0x37, 0x6a, 0xee, 0x0f,
	0x96, 0xdd, 0xaf, 0xa4, 0x7b, 0xd6, 0xff, 0xbd, 0x6b, 0xad, 0xb9, 0x5a, 0xaa, 0xd5, 0xe9, 0xdd,
	0xc2, 0x8c, 0x09, 0xf3, 0xe0, 0xc8, 0x6d, 0x47, 0xb0, 0x3f, 0x70, 0x9b, 0xa3, 0x7e, 0x36, 0xfc,
	0x1d, 0x6b, 0xa1, 0xbb, 0xd1, 0xe7, 0xed, 0xc3, 0x99, 0x3c, 0xda, 0x22, 0x08, 0xf3, 0xe3, 0xa5,
	0x5a, 0x4d, 0xfa, 0xb3, 0x3a, 0x3f, 0x92, 0xc7, 0x27, 0x41, 0x58, 0x4f, 0xf5, 0x49, 0x1d, 0xd6,
	0xb7, 0xfa, 0x9a, 0xd3, 0x60, 0xe0, 0x3d, 0xb1, 0xa7, 0xe2, 0x0d, 0xb0, 0x8f, 0x1c, 0x30, 0x64,
	0xa9, 0xfd, 0x76, 0x0a, 0xf0, 0xc7, 0x66, 0xb2, 0x55, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbf,
	0x7f, 0x81, 0x27, 0x16, 0x01, 0x00, 0x00,
}
