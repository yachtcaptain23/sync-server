// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_debug_info.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Per-type hint information.
type TypeHint struct {
	// The data type this hint applied to.
	DataTypeId *int32 `protobuf:"varint,1,opt,name=data_type_id,json=dataTypeId" json:"data_type_id,omitempty"`
	// Whether or not a valid hint is provided.
	HasValidHint         *bool    `protobuf:"varint,2,opt,name=has_valid_hint,json=hasValidHint" json:"has_valid_hint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypeHint) Reset()         { *m = TypeHint{} }
func (m *TypeHint) String() string { return proto.CompactTextString(m) }
func (*TypeHint) ProtoMessage()    {}
func (*TypeHint) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba4c580db518db37, []int{0}
}

func (m *TypeHint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeHint.Unmarshal(m, b)
}
func (m *TypeHint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeHint.Marshal(b, m, deterministic)
}
func (m *TypeHint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeHint.Merge(m, src)
}
func (m *TypeHint) XXX_Size() int {
	return xxx_messageInfo_TypeHint.Size(m)
}
func (m *TypeHint) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeHint.DiscardUnknown(m)
}

var xxx_messageInfo_TypeHint proto.InternalMessageInfo

func (m *TypeHint) GetDataTypeId() int32 {
	if m != nil && m.DataTypeId != nil {
		return *m.DataTypeId
	}
	return 0
}

func (m *TypeHint) GetHasValidHint() bool {
	if m != nil && m.HasValidHint != nil {
		return *m.HasValidHint
	}
	return false
}

// The additional info here is from the StatusController. They get sent when
// the event SYNC_CYCLE_COMPLETED  is sent.
type SyncCycleCompletedEventInfo struct {
	// These new conflict counters replace the ones above.
	NumEncryptionConflicts *int32 `protobuf:"varint,4,opt,name=num_encryption_conflicts,json=numEncryptionConflicts" json:"num_encryption_conflicts,omitempty"`
	NumHierarchyConflicts  *int32 `protobuf:"varint,5,opt,name=num_hierarchy_conflicts,json=numHierarchyConflicts" json:"num_hierarchy_conflicts,omitempty"`
	NumSimpleConflicts     *int32 `protobuf:"varint,6,opt,name=num_simple_conflicts,json=numSimpleConflicts" json:"num_simple_conflicts,omitempty"`
	NumServerConflicts     *int32 `protobuf:"varint,7,opt,name=num_server_conflicts,json=numServerConflicts" json:"num_server_conflicts,omitempty"`
	// Counts to track the effective usefulness of our GetUpdate requests.
	NumUpdatesDownloaded          *int32 `protobuf:"varint,8,opt,name=num_updates_downloaded,json=numUpdatesDownloaded" json:"num_updates_downloaded,omitempty"`
	NumReflectedUpdatesDownloaded *int32 `protobuf:"varint,9,opt,name=num_reflected_updates_downloaded,json=numReflectedUpdatesDownloaded" json:"num_reflected_updates_downloaded,omitempty"`
	// |caller_info| was mostly replaced by |get_updates_origin|; now it only
	// contains the |notifications_enabled| flag.
	CallerInfo           *GetUpdatesCallerInfo       `protobuf:"bytes,10,opt,name=caller_info,json=callerInfo" json:"caller_info,omitempty"`
	GetUpdatesOrigin     *SyncEnums_GetUpdatesOrigin `protobuf:"varint,12,opt,name=get_updates_origin,json=getUpdatesOrigin,enum=sync_pb.SyncEnums_GetUpdatesOrigin" json:"get_updates_origin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SyncCycleCompletedEventInfo) Reset()         { *m = SyncCycleCompletedEventInfo{} }
func (m *SyncCycleCompletedEventInfo) String() string { return proto.CompactTextString(m) }
func (*SyncCycleCompletedEventInfo) ProtoMessage()    {}
func (*SyncCycleCompletedEventInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba4c580db518db37, []int{1}
}

func (m *SyncCycleCompletedEventInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncCycleCompletedEventInfo.Unmarshal(m, b)
}
func (m *SyncCycleCompletedEventInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncCycleCompletedEventInfo.Marshal(b, m, deterministic)
}
func (m *SyncCycleCompletedEventInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncCycleCompletedEventInfo.Merge(m, src)
}
func (m *SyncCycleCompletedEventInfo) XXX_Size() int {
	return xxx_messageInfo_SyncCycleCompletedEventInfo.Size(m)
}
func (m *SyncCycleCompletedEventInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncCycleCompletedEventInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SyncCycleCompletedEventInfo proto.InternalMessageInfo

func (m *SyncCycleCompletedEventInfo) GetNumEncryptionConflicts() int32 {
	if m != nil && m.NumEncryptionConflicts != nil {
		return *m.NumEncryptionConflicts
	}
	return 0
}

func (m *SyncCycleCompletedEventInfo) GetNumHierarchyConflicts() int32 {
	if m != nil && m.NumHierarchyConflicts != nil {
		return *m.NumHierarchyConflicts
	}
	return 0
}

func (m *SyncCycleCompletedEventInfo) GetNumSimpleConflicts() int32 {
	if m != nil && m.NumSimpleConflicts != nil {
		return *m.NumSimpleConflicts
	}
	return 0
}

func (m *SyncCycleCompletedEventInfo) GetNumServerConflicts() int32 {
	if m != nil && m.NumServerConflicts != nil {
		return *m.NumServerConflicts
	}
	return 0
}

func (m *SyncCycleCompletedEventInfo) GetNumUpdatesDownloaded() int32 {
	if m != nil && m.NumUpdatesDownloaded != nil {
		return *m.NumUpdatesDownloaded
	}
	return 0
}

func (m *SyncCycleCompletedEventInfo) GetNumReflectedUpdatesDownloaded() int32 {
	if m != nil && m.NumReflectedUpdatesDownloaded != nil {
		return *m.NumReflectedUpdatesDownloaded
	}
	return 0
}

func (m *SyncCycleCompletedEventInfo) GetCallerInfo() *GetUpdatesCallerInfo {
	if m != nil {
		return m.CallerInfo
	}
	return nil
}

func (m *SyncCycleCompletedEventInfo) GetGetUpdatesOrigin() SyncEnums_GetUpdatesOrigin {
	if m != nil && m.GetUpdatesOrigin != nil {
		return *m.GetUpdatesOrigin
	}
	return SyncEnums_UNKNOWN_ORIGIN
}

// Datatype specifics statistics gathered at association time.
type DatatypeAssociationStats struct {
	// The datatype that was associated.
	DataTypeId *int32 `protobuf:"varint,1,opt,name=data_type_id,json=dataTypeId" json:"data_type_id,omitempty"`
	// The state of the world before association.
	NumLocalItemsBeforeAssociation *int32 `protobuf:"varint,2,opt,name=num_local_items_before_association,json=numLocalItemsBeforeAssociation" json:"num_local_items_before_association,omitempty"`
	NumSyncItemsBeforeAssociation  *int32 `protobuf:"varint,3,opt,name=num_sync_items_before_association,json=numSyncItemsBeforeAssociation" json:"num_sync_items_before_association,omitempty"`
	// The state of the world after association.
	NumLocalItemsAfterAssociation *int32 `protobuf:"varint,4,opt,name=num_local_items_after_association,json=numLocalItemsAfterAssociation" json:"num_local_items_after_association,omitempty"`
	NumSyncItemsAfterAssociation  *int32 `protobuf:"varint,5,opt,name=num_sync_items_after_association,json=numSyncItemsAfterAssociation" json:"num_sync_items_after_association,omitempty"`
	// The changes that got us from before to after. In a correctly working
	// system these should be the deltas between before and after.
	NumLocalItemsAdded    *int32 `protobuf:"varint,6,opt,name=num_local_items_added,json=numLocalItemsAdded" json:"num_local_items_added,omitempty"`
	NumLocalItemsDeleted  *int32 `protobuf:"varint,7,opt,name=num_local_items_deleted,json=numLocalItemsDeleted" json:"num_local_items_deleted,omitempty"`
	NumLocalItemsModified *int32 `protobuf:"varint,8,opt,name=num_local_items_modified,json=numLocalItemsModified" json:"num_local_items_modified,omitempty"`
	NumSyncItemsAdded     *int32 `protobuf:"varint,9,opt,name=num_sync_items_added,json=numSyncItemsAdded" json:"num_sync_items_added,omitempty"`
	NumSyncItemsDeleted   *int32 `protobuf:"varint,10,opt,name=num_sync_items_deleted,json=numSyncItemsDeleted" json:"num_sync_items_deleted,omitempty"`
	NumSyncItemsModified  *int32 `protobuf:"varint,11,opt,name=num_sync_items_modified,json=numSyncItemsModified" json:"num_sync_items_modified,omitempty"`
	// Model versions before association. Ideally local and sync model should
	// have same version if models were persisted properly in last cycle.
	// Note: currently version is only set on bookmark model.
	LocalVersionPreAssociation *int64 `protobuf:"varint,20,opt,name=local_version_pre_association,json=localVersionPreAssociation" json:"local_version_pre_association,omitempty"`
	SyncVersionPreAssociation  *int64 `protobuf:"varint,21,opt,name=sync_version_pre_association,json=syncVersionPreAssociation" json:"sync_version_pre_association,omitempty"`
	// The data type ran into an error during model association.
	HadError *bool `protobuf:"varint,12,opt,name=had_error,json=hadError" json:"had_error,omitempty"`
	// Waiting time before downloading starts. This measures the time between
	// receiving configuration request for a set of data types to starting
	// downloading data of this type.
	DownloadWaitTimeUs *int64 `protobuf:"varint,15,opt,name=download_wait_time_us,json=downloadWaitTimeUs" json:"download_wait_time_us,omitempty"`
	// Time spent on downloading sync data for first time sync.
	// Note: This measures the time between asking backend to download data to
	//       being notified of download-ready by backend. So it consists of
	//       time on data downloading and processing at sync backend. But
	//       downloading time should dominate. It's also the total time spent on
	//       downloading data of all types in the priority group of
	//       |data_type_id| instead of just one data type.
	DownloadTimeUs *int64 `protobuf:"varint,13,opt,name=download_time_us,json=downloadTimeUs" json:"download_time_us,omitempty"`
	// Waiting time for higher priority types to finish association. This
	// measures the time between finishing downloading data to requesting
	// association manager to associate this batch of types. High priority types
	// have near zero waiting time.
	AssociationWaitTimeForHighPriorityUs *int64 `protobuf:"varint,16,opt,name=association_wait_time_for_high_priority_us,json=associationWaitTimeForHighPriorityUs" json:"association_wait_time_for_high_priority_us,omitempty"`
	// Waiting time for other types with same priority during association.
	// Data type manger sends types of same priority to association manager to
	// configure as a batch. Association manager configures one type at a time.
	// This measures the time between when a type is sent to association manager
	// (among other types) to when association manager starts configuring the
	// type. Total wait time before association is
	//     |association_wait_time_for_high_priority_us| +
	//     |association_wait_time_for_same_priority_us|
	AssociationWaitTimeForSamePriorityUs *int64 `protobuf:"varint,14,opt,name=association_wait_time_for_same_priority_us,json=associationWaitTimeForSamePriorityUs" json:"association_wait_time_for_same_priority_us,omitempty"`
	// Time spent on model association.
	AssociationTimeUs *int64 `protobuf:"varint,17,opt,name=association_time_us,json=associationTimeUs" json:"association_time_us,omitempty"`
	// Higher priority type that's configured before this type.
	HighPriorityTypeConfiguredBefore []int32 `protobuf:"varint,18,rep,name=high_priority_type_configured_before,json=highPriorityTypeConfiguredBefore" json:"high_priority_type_configured_before,omitempty"`
	// Same priority type that's configured before this type.
	SamePriorityTypeConfiguredBefore []int32  `protobuf:"varint,19,rep,name=same_priority_type_configured_before,json=samePriorityTypeConfiguredBefore" json:"same_priority_type_configured_before,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *DatatypeAssociationStats) Reset()         { *m = DatatypeAssociationStats{} }
func (m *DatatypeAssociationStats) String() string { return proto.CompactTextString(m) }
func (*DatatypeAssociationStats) ProtoMessage()    {}
func (*DatatypeAssociationStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba4c580db518db37, []int{2}
}

func (m *DatatypeAssociationStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatatypeAssociationStats.Unmarshal(m, b)
}
func (m *DatatypeAssociationStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatatypeAssociationStats.Marshal(b, m, deterministic)
}
func (m *DatatypeAssociationStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatatypeAssociationStats.Merge(m, src)
}
func (m *DatatypeAssociationStats) XXX_Size() int {
	return xxx_messageInfo_DatatypeAssociationStats.Size(m)
}
func (m *DatatypeAssociationStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DatatypeAssociationStats.DiscardUnknown(m)
}

var xxx_messageInfo_DatatypeAssociationStats proto.InternalMessageInfo

func (m *DatatypeAssociationStats) GetDataTypeId() int32 {
	if m != nil && m.DataTypeId != nil {
		return *m.DataTypeId
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumLocalItemsBeforeAssociation() int32 {
	if m != nil && m.NumLocalItemsBeforeAssociation != nil {
		return *m.NumLocalItemsBeforeAssociation
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumSyncItemsBeforeAssociation() int32 {
	if m != nil && m.NumSyncItemsBeforeAssociation != nil {
		return *m.NumSyncItemsBeforeAssociation
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumLocalItemsAfterAssociation() int32 {
	if m != nil && m.NumLocalItemsAfterAssociation != nil {
		return *m.NumLocalItemsAfterAssociation
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumSyncItemsAfterAssociation() int32 {
	if m != nil && m.NumSyncItemsAfterAssociation != nil {
		return *m.NumSyncItemsAfterAssociation
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumLocalItemsAdded() int32 {
	if m != nil && m.NumLocalItemsAdded != nil {
		return *m.NumLocalItemsAdded
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumLocalItemsDeleted() int32 {
	if m != nil && m.NumLocalItemsDeleted != nil {
		return *m.NumLocalItemsDeleted
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumLocalItemsModified() int32 {
	if m != nil && m.NumLocalItemsModified != nil {
		return *m.NumLocalItemsModified
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumSyncItemsAdded() int32 {
	if m != nil && m.NumSyncItemsAdded != nil {
		return *m.NumSyncItemsAdded
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumSyncItemsDeleted() int32 {
	if m != nil && m.NumSyncItemsDeleted != nil {
		return *m.NumSyncItemsDeleted
	}
	return 0
}

func (m *DatatypeAssociationStats) GetNumSyncItemsModified() int32 {
	if m != nil && m.NumSyncItemsModified != nil {
		return *m.NumSyncItemsModified
	}
	return 0
}

func (m *DatatypeAssociationStats) GetLocalVersionPreAssociation() int64 {
	if m != nil && m.LocalVersionPreAssociation != nil {
		return *m.LocalVersionPreAssociation
	}
	return 0
}

func (m *DatatypeAssociationStats) GetSyncVersionPreAssociation() int64 {
	if m != nil && m.SyncVersionPreAssociation != nil {
		return *m.SyncVersionPreAssociation
	}
	return 0
}

func (m *DatatypeAssociationStats) GetHadError() bool {
	if m != nil && m.HadError != nil {
		return *m.HadError
	}
	return false
}

func (m *DatatypeAssociationStats) GetDownloadWaitTimeUs() int64 {
	if m != nil && m.DownloadWaitTimeUs != nil {
		return *m.DownloadWaitTimeUs
	}
	return 0
}

func (m *DatatypeAssociationStats) GetDownloadTimeUs() int64 {
	if m != nil && m.DownloadTimeUs != nil {
		return *m.DownloadTimeUs
	}
	return 0
}

func (m *DatatypeAssociationStats) GetAssociationWaitTimeForHighPriorityUs() int64 {
	if m != nil && m.AssociationWaitTimeForHighPriorityUs != nil {
		return *m.AssociationWaitTimeForHighPriorityUs
	}
	return 0
}

func (m *DatatypeAssociationStats) GetAssociationWaitTimeForSamePriorityUs() int64 {
	if m != nil && m.AssociationWaitTimeForSamePriorityUs != nil {
		return *m.AssociationWaitTimeForSamePriorityUs
	}
	return 0
}

func (m *DatatypeAssociationStats) GetAssociationTimeUs() int64 {
	if m != nil && m.AssociationTimeUs != nil {
		return *m.AssociationTimeUs
	}
	return 0
}

func (m *DatatypeAssociationStats) GetHighPriorityTypeConfiguredBefore() []int32 {
	if m != nil {
		return m.HighPriorityTypeConfiguredBefore
	}
	return nil
}

func (m *DatatypeAssociationStats) GetSamePriorityTypeConfiguredBefore() []int32 {
	if m != nil {
		return m.SamePriorityTypeConfiguredBefore
	}
	return nil
}

type DebugEventInfo struct {
	// Each of the following fields correspond to different kinds of events. as
	// a result, only one is set during any single DebugEventInfo.
	// A singleton event. See enum definition.
	SingletonEvent *SyncEnums_SingletonDebugEventType `protobuf:"varint,1,opt,name=singleton_event,json=singletonEvent,enum=sync_pb.SyncEnums_SingletonDebugEventType" json:"singleton_event,omitempty"`
	// A sync cycle completed.
	SyncCycleCompletedEventInfo *SyncCycleCompletedEventInfo `protobuf:"bytes,2,opt,name=sync_cycle_completed_event_info,json=syncCycleCompletedEventInfo" json:"sync_cycle_completed_event_info,omitempty"`
	// A datatype triggered a nudge.
	NudgingDatatype *int32 `protobuf:"varint,3,opt,name=nudging_datatype,json=nudgingDatatype" json:"nudging_datatype,omitempty"`
	// A notification triggered a nudge.
	DatatypesNotifiedFromServer []int32 `protobuf:"varint,4,rep,name=datatypes_notified_from_server,json=datatypesNotifiedFromServer" json:"datatypes_notified_from_server,omitempty"`
	// A datatype finished model association.
	DatatypeAssociationStats *DatatypeAssociationStats `protobuf:"bytes,5,opt,name=datatype_association_stats,json=datatypeAssociationStats" json:"datatype_association_stats,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *DebugEventInfo) Reset()         { *m = DebugEventInfo{} }
func (m *DebugEventInfo) String() string { return proto.CompactTextString(m) }
func (*DebugEventInfo) ProtoMessage()    {}
func (*DebugEventInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba4c580db518db37, []int{3}
}

func (m *DebugEventInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugEventInfo.Unmarshal(m, b)
}
func (m *DebugEventInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugEventInfo.Marshal(b, m, deterministic)
}
func (m *DebugEventInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugEventInfo.Merge(m, src)
}
func (m *DebugEventInfo) XXX_Size() int {
	return xxx_messageInfo_DebugEventInfo.Size(m)
}
func (m *DebugEventInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugEventInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DebugEventInfo proto.InternalMessageInfo

func (m *DebugEventInfo) GetSingletonEvent() SyncEnums_SingletonDebugEventType {
	if m != nil && m.SingletonEvent != nil {
		return *m.SingletonEvent
	}
	return SyncEnums_CONNECTION_STATUS_CHANGE
}

func (m *DebugEventInfo) GetSyncCycleCompletedEventInfo() *SyncCycleCompletedEventInfo {
	if m != nil {
		return m.SyncCycleCompletedEventInfo
	}
	return nil
}

func (m *DebugEventInfo) GetNudgingDatatype() int32 {
	if m != nil && m.NudgingDatatype != nil {
		return *m.NudgingDatatype
	}
	return 0
}

func (m *DebugEventInfo) GetDatatypesNotifiedFromServer() []int32 {
	if m != nil {
		return m.DatatypesNotifiedFromServer
	}
	return nil
}

func (m *DebugEventInfo) GetDatatypeAssociationStats() *DatatypeAssociationStats {
	if m != nil {
		return m.DatatypeAssociationStats
	}
	return nil
}

type DebugInfo struct {
	Events []*DebugEventInfo `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	// Whether cryptographer is ready to encrypt and decrypt data.
	CryptographerReady *bool `protobuf:"varint,2,opt,name=cryptographer_ready,json=cryptographerReady" json:"cryptographer_ready,omitempty"`
	// Cryptographer has pending keys which indicates the correct passphrase
	// has not been provided yet.
	CryptographerHasPendingKeys *bool `protobuf:"varint,3,opt,name=cryptographer_has_pending_keys,json=cryptographerHasPendingKeys" json:"cryptographer_has_pending_keys,omitempty"`
	// Indicates client has dropped some events to save bandwidth.
	EventsDropped        *bool    `protobuf:"varint,4,opt,name=events_dropped,json=eventsDropped" json:"events_dropped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugInfo) Reset()         { *m = DebugInfo{} }
func (m *DebugInfo) String() string { return proto.CompactTextString(m) }
func (*DebugInfo) ProtoMessage()    {}
func (*DebugInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba4c580db518db37, []int{4}
}

func (m *DebugInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugInfo.Unmarshal(m, b)
}
func (m *DebugInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugInfo.Marshal(b, m, deterministic)
}
func (m *DebugInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugInfo.Merge(m, src)
}
func (m *DebugInfo) XXX_Size() int {
	return xxx_messageInfo_DebugInfo.Size(m)
}
func (m *DebugInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DebugInfo proto.InternalMessageInfo

func (m *DebugInfo) GetEvents() []*DebugEventInfo {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *DebugInfo) GetCryptographerReady() bool {
	if m != nil && m.CryptographerReady != nil {
		return *m.CryptographerReady
	}
	return false
}

func (m *DebugInfo) GetCryptographerHasPendingKeys() bool {
	if m != nil && m.CryptographerHasPendingKeys != nil {
		return *m.CryptographerHasPendingKeys
	}
	return false
}

func (m *DebugInfo) GetEventsDropped() bool {
	if m != nil && m.EventsDropped != nil {
		return *m.EventsDropped
	}
	return false
}

func init() {
	proto.RegisterType((*TypeHint)(nil), "sync_pb.TypeHint")
	proto.RegisterType((*SyncCycleCompletedEventInfo)(nil), "sync_pb.SyncCycleCompletedEventInfo")
	proto.RegisterType((*DatatypeAssociationStats)(nil), "sync_pb.DatatypeAssociationStats")
	proto.RegisterType((*DebugEventInfo)(nil), "sync_pb.DebugEventInfo")
	proto.RegisterType((*DebugInfo)(nil), "sync_pb.DebugInfo")
}

func init() {
	proto.RegisterFile("client_debug_info.proto", fileDescriptor_ba4c580db518db37)
}

var fileDescriptor_ba4c580db518db37 = []byte{
	// 1155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xed, 0x52, 0x1b, 0x37,
	0x17, 0x1e, 0x63, 0x93, 0x38, 0x32, 0x31, 0x66, 0x81, 0x97, 0x7d, 0x21, 0xa4, 0x8e, 0x4b, 0x66,
	0xdc, 0x74, 0xc6, 0xb4, 0xf4, 0xf3, 0x57, 0x3b, 0xc4, 0x40, 0x0c, 0x6d, 0x53, 0xba, 0x4e, 0xd2,
	0xfe, 0xd3, 0x88, 0x95, 0xbc, 0xab, 0xb2, 0x2b, 0xed, 0x48, 0x5a, 0x32, 0x7b, 0x3b, 0xfd, 0xd1,
	0x7b, 0xea, 0x3d, 0xf4, 0x22, 0x3a, 0xd2, 0x7e, 0x69, 0x03, 0xa6, 0xfd, 0x67, 0x9f, 0xf3, 0x3c,
	0x8f, 0xce, 0xd1, 0x9e, 0x0f, 0x81, 0x1d, 0x3f, 0xa2, 0x84, 0x29, 0x88, 0xc9, 0x55, 0x1a, 0x40,
	0xca, 0x16, 0x7c, 0x92, 0x08, 0xae, 0xb8, 0xf3, 0x50, 0x66, 0xcc, 0x87, 0xc9, 0xd5, 0xee, 0x7e,
	0x40, 0x14, 0x4c, 0x13, 0x8c, 0x14, 0x91, 0xd0, 0x47, 0x51, 0x44, 0x84, 0x85, 0xdb, 0x1d, 0x18,
	0x1c, 0x61, 0x69, 0x2c, 0x73, 0xcb, 0xc8, 0x03, 0xdd, 0x37, 0x59, 0x42, 0x66, 0x94, 0x29, 0x67,
	0x08, 0xd6, 0x30, 0x52, 0x08, 0xaa, 0x2c, 0x21, 0x90, 0x62, 0xb7, 0x35, 0x6c, 0x8d, 0x57, 0x3d,
	0xa0, 0x6d, 0x1a, 0x73, 0x8e, 0x9d, 0x03, 0xd0, 0x0f, 0x91, 0x84, 0x37, 0x28, 0xa2, 0x18, 0x86,
	0x94, 0x29, 0x77, 0x65, 0xd8, 0x1a, 0x77, 0xbd, 0xb5, 0x10, 0xc9, 0x77, 0xda, 0xa8, 0x75, 0x46,
	0x7f, 0x77, 0xc0, 0xde, 0x3c, 0x63, 0xfe, 0x34, 0xf3, 0x23, 0x32, 0xe5, 0x71, 0x12, 0x11, 0x45,
	0xf0, 0xe9, 0x0d, 0x61, 0xea, 0x9c, 0x2d, 0xb8, 0xf3, 0x2d, 0x70, 0x59, 0x1a, 0x43, 0xc2, 0x7c,
	0x91, 0x25, 0x8a, 0x72, 0x06, 0x7d, 0xce, 0x16, 0x11, 0xf5, 0x95, 0x74, 0x3b, 0xe6, 0xcc, 0xff,
	0xb1, 0x34, 0x3e, 0xad, 0xdc, 0xd3, 0xd2, 0xeb, 0x7c, 0x0d, 0x76, 0x34, 0x33, 0xa4, 0x44, 0x20,
	0xe1, 0x87, 0x99, 0x45, 0x5c, 0x35, 0xc4, 0x6d, 0x96, 0xc6, 0xb3, 0xd2, 0x5b, 0xf3, 0x3e, 0x03,
	0x5b, 0x9a, 0x27, 0xa9, 0x8e, 0xc5, 0x22, 0x3d, 0x30, 0x24, 0x87, 0xa5, 0xf1, 0xdc, 0xb8, 0x6e,
	0x33, 0x88, 0xb8, 0x21, 0xc2, 0x62, 0x3c, 0xac, 0x19, 0xc6, 0x55, 0x33, 0xbe, 0x04, 0x3a, 0xea,
	0xea, 0xf2, 0x31, 0x7f, 0xcf, 0x22, 0x8e, 0x30, 0xc1, 0x6e, 0xd7, 0x70, 0xb4, 0xde, 0xdb, 0xdc,
	0x79, 0x52, 0xf9, 0x9c, 0x57, 0x60, 0xa8, 0x59, 0x82, 0x2c, 0x22, 0xe2, 0x2b, 0x82, 0xef, 0xe2,
	0x3f, 0x32, 0xfc, 0x7d, 0x96, 0xc6, 0x5e, 0x09, 0xbb, 0x2d, 0xf4, 0x1d, 0xe8, 0x59, 0xdf, 0xdb,
	0x05, 0xc3, 0xd6, 0xb8, 0x77, 0xb4, 0x3f, 0x29, 0x0a, 0x63, 0xf2, 0x8a, 0xa8, 0x82, 0x33, 0x35,
	0x28, 0xfd, 0x21, 0x3c, 0xe0, 0x57, 0xbf, 0x9d, 0x5f, 0x80, 0x63, 0xd7, 0x0e, 0x17, 0x34, 0xa0,
	0xcc, 0x5d, 0x1b, 0xb6, 0xc6, 0xfd, 0xa3, 0x8f, 0x2b, 0x19, 0xfd, 0x59, 0x4f, 0x4d, 0xf9, 0xd4,
	0x82, 0x3f, 0x1b, 0xa8, 0x37, 0x08, 0x3e, 0xb0, 0x5c, 0x74, 0xba, 0xad, 0xc1, 0xca, 0x45, 0xa7,
	0xbb, 0x32, 0x68, 0x5f, 0x74, 0xba, 0xed, 0x41, 0xe7, 0xa2, 0xd3, 0xed, 0x0d, 0xd6, 0xbc, 0x35,
	0xad, 0x46, 0x04, 0x94, 0x2a, 0xf5, 0xaf, 0xcd, 0xb7, 0x86, 0x57, 0x11, 0xf7, 0xaf, 0x29, 0x0b,
	0xea, 0x9b, 0xf6, 0x76, 0xb5, 0x9d, 0x71, 0x76, 0x97, 0xaf, 0x27, 0x79, 0x2a, 0x7c, 0x62, 0x52,
	0x1d, 0xfd, 0x09, 0x80, 0x7b, 0x82, 0x14, 0xd2, 0x65, 0x7b, 0x2c, 0x25, 0xf7, 0x29, 0xd2, 0x55,
	0x33, 0x57, 0x48, 0xc9, 0xff, 0x50, 0xd3, 0x17, 0x60, 0xa4, 0x4f, 0x8a, 0xb8, 0x8f, 0x22, 0x48,
	0x15, 0x89, 0x25, 0xbc, 0x22, 0x0b, 0x2e, 0x08, 0x44, 0xb5, 0x98, 0xa9, 0xf3, 0x55, 0xef, 0x29,
	0x4b, 0xe3, 0x1f, 0x35, 0xf0, 0x5c, 0xe3, 0x5e, 0x1a, 0x98, 0x75, 0xa4, 0x33, 0x03, 0xcf, 0x4c,
	0xd5, 0xe8, 0xdb, 0x5a, 0x2a, 0xd5, 0xae, 0x3e, 0xa7, 0xbe, 0xcd, 0xfb, 0x95, 0xec, 0xa8, 0xd0,
	0x42, 0x11, 0xd1, 0x50, 0xea, 0x54, 0x4a, 0x75, 0x50, 0xc7, 0x1a, 0x65, 0x2b, 0x9d, 0xe5, 0x15,
	0x66, 0xc5, 0x74, 0x5b, 0x28, 0x6f, 0x9e, 0x27, 0x76, 0x48, 0xb7, 0x74, 0x3e, 0x07, 0xdb, 0xb7,
	0x22, 0xc2, 0xba, 0x3c, 0xeb, 0x26, 0xb2, 0xa2, 0xd0, 0x1e, 0xe7, 0xab, 0xbc, 0x5d, 0x6d, 0x0a,
	0x26, 0x66, 0x18, 0x14, 0x7d, 0xb4, 0xd5, 0x20, 0x9d, 0xe4, 0x3e, 0xe7, 0x9b, 0x7c, 0x3e, 0xd8,
	0xb4, 0x98, 0x63, 0xba, 0xa0, 0x55, 0x2f, 0x6d, 0x37, 0x78, 0x3f, 0x15, 0x4e, 0xe7, 0xb0, 0x68,
	0x5a, 0x2b, 0x55, 0x5c, 0x37, 0xd0, 0x46, 0x23, 0x3d, 0x13, 0xe0, 0x17, 0x79, 0xcf, 0x5a, 0x84,
	0x32, 0x3e, 0x60, 0x28, 0x9b, 0x36, 0xa5, 0x0c, 0xaf, 0xc8, 0xca, 0x22, 0x55, 0xd1, 0xf5, 0xaa,
	0xac, 0x2a, 0x56, 0x15, 0xdc, 0x31, 0xd8, 0xcf, 0x33, 0xba, 0x21, 0x42, 0xea, 0xa1, 0x97, 0x7c,
	0x50, 0x17, 0x5b, 0xc3, 0xd6, 0xb8, 0xed, 0xed, 0x1a, 0xd0, 0xbb, 0x1c, 0x73, 0xd9, 0x2c, 0x8a,
	0xef, 0xc1, 0x13, 0x73, 0xea, 0x32, 0x85, 0x6d, 0xa3, 0xf0, 0x7f, 0x8d, 0xb9, 0x5b, 0x60, 0x0f,
	0x3c, 0x0a, 0x11, 0x86, 0x44, 0x08, 0x2e, 0x4c, 0x6f, 0x77, 0xbd, 0x6e, 0x88, 0xf0, 0xa9, 0xfe,
	0xaf, 0x3f, 0x70, 0x39, 0x74, 0xe0, 0x7b, 0x44, 0x15, 0x54, 0x34, 0x26, 0x30, 0x95, 0xee, 0xba,
	0x91, 0x75, 0x4a, 0xe7, 0xaf, 0x88, 0xaa, 0x37, 0x34, 0x26, 0x6f, 0xa5, 0x33, 0x06, 0x83, 0x8a,
	0x52, 0xa2, 0x1f, 0x1b, 0x74, 0xbf, 0xb4, 0x17, 0xc8, 0xdf, 0xc0, 0x0b, 0x2b, 0x52, 0x4b, 0x7f,
	0xc1, 0x05, 0x0c, 0x69, 0x10, 0xc2, 0x44, 0x50, 0x2e, 0xa8, 0xca, 0xb4, 0xc6, 0xc0, 0x68, 0x1c,
	0x58, 0x8c, 0xf2, 0xd0, 0x33, 0x2e, 0x66, 0x34, 0x08, 0x2f, 0x0b, 0xf0, 0xbf, 0x29, 0x4b, 0x14,
	0x93, 0x86, 0x72, 0xff, 0x3e, 0xe5, 0x39, 0x8a, 0x89, 0xa5, 0x3c, 0x01, 0x9b, 0xb6, 0x72, 0x99,
	0xe0, 0x86, 0x91, 0xd8, 0xb0, 0x5c, 0x45, 0x8e, 0xaf, 0xc1, 0x41, 0x33, 0x13, 0x33, 0x74, 0xf4,
	0xd4, 0xa2, 0x41, 0x2a, 0x08, 0x2e, 0x86, 0x81, 0xeb, 0x0c, 0xdb, 0xe3, 0x55, 0x6f, 0x18, 0x5a,
	0x79, 0xe8, 0x59, 0x34, 0xad, 0x80, 0xf9, 0x38, 0xd0, 0x7a, 0xcd, 0xf8, 0x97, 0xe8, 0x6d, 0xe6,
	0x7a, 0xd2, 0x8a, 0xfe, 0x2e, 0xbd, 0xd1, 0x1f, 0x6d, 0xd0, 0x3f, 0xd1, 0x4f, 0x87, 0x7a, 0x15,
	0xcf, 0xc1, 0xba, 0xa4, 0x2c, 0x88, 0x88, 0xe2, 0x0c, 0x12, 0x6d, 0x36, 0x13, 0xb2, 0x7f, 0xf4,
	0xe2, 0x8e, 0x91, 0x3f, 0x2f, 0x91, 0xb5, 0x88, 0x3e, 0xc7, 0xeb, 0x57, 0x12, 0xc6, 0xe6, 0xfc,
	0x0e, 0x3e, 0x32, 0x64, 0x5f, 0xef, 0x7f, 0xe8, 0x97, 0x0f, 0x80, 0x5c, 0x3f, 0x5f, 0x4f, 0x2b,
	0x66, 0x3d, 0x1d, 0x34, 0x0e, 0x59, 0xf2, 0x5c, 0xf0, 0xf6, 0xe4, 0x3d, 0x6f, 0x89, 0x4f, 0xc0,
	0x80, 0xa5, 0x38, 0xd0, 0xeb, 0x01, 0x17, 0x3b, 0xa0, 0x18, 0xb0, 0xeb, 0x85, 0xbd, 0x5c, 0x0d,
	0xce, 0x14, 0x3c, 0x2d, 0x21, 0x12, 0x32, 0xae, 0x4c, 0x5b, 0xc2, 0x85, 0xe0, 0xe5, 0x9a, 0x77,
	0x3b, 0xe6, 0x22, 0xf7, 0x2a, 0xd4, 0xeb, 0x02, 0x74, 0x26, 0x78, 0xb1, 0xee, 0x1d, 0x08, 0x76,
	0x4b, 0xb7, 0xdd, 0x7a, 0x50, 0xea, 0x6d, 0x63, 0xe6, 0x68, 0xef, 0xe8, 0x59, 0x95, 0xd6, 0xb2,
	0xb5, 0xe4, 0xb9, 0x78, 0x89, 0x67, 0xf4, 0x57, 0x0b, 0x3c, 0x32, 0xf7, 0x6b, 0xd2, 0x3b, 0x04,
	0x0f, 0xcc, 0xad, 0x49, 0xb7, 0x35, 0x6c, 0x8f, 0x7b, 0x47, 0x3b, 0xb5, 0x74, 0xe3, 0x43, 0x7a,
	0x05, 0xcc, 0x39, 0x04, 0x9b, 0xe6, 0xd9, 0xc4, 0x03, 0x81, 0x92, 0x90, 0x08, 0x28, 0x08, 0xc2,
	0x59, 0xf1, 0x4c, 0x73, 0x1a, 0x2e, 0x4f, 0x7b, 0xf4, 0xad, 0x34, 0x09, 0xfa, 0x81, 0x97, 0x10,
	0x86, 0xf5, 0x95, 0x5e, 0x93, 0x4c, 0x9a, 0xeb, 0xec, 0x7a, 0x7b, 0x0d, 0xd4, 0x0c, 0xc9, 0xcb,
	0x1c, 0xf3, 0x03, 0xc9, 0xa4, 0xf3, 0x1c, 0xf4, 0xf3, 0xf3, 0x21, 0x16, 0x3c, 0x49, 0x08, 0x36,
	0xab, 0xa9, 0xeb, 0x3d, 0xce, 0xad, 0x27, 0xb9, 0xf1, 0xe5, 0xa7, 0xe0, 0x39, 0x17, 0xc1, 0xc4,
	0x0f, 0x05, 0x8f, 0x69, 0x1a, 0x4f, 0x74, 0x69, 0x70, 0xa6, 0x11, 0x26, 0xad, 0xfc, 0x49, 0xea,
	0xf3, 0x68, 0xd6, 0xbe, 0x6c, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xbb, 0x16, 0xdd, 0xed,
	0x0a, 0x00, 0x00,
}
