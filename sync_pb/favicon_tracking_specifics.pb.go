// Code generated by protoc-gen-go. DO NOT EDIT.
// source: favicon_tracking_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Tracking info for of favicon images. These control expiration of images
// from sync based on recency, bookmark state, etc.
type FaviconTrackingSpecifics struct {
	// The url of the favicon image.
	FaviconUrl *string `protobuf:"bytes,1,opt,name=favicon_url,json=faviconUrl" json:"favicon_url,omitempty"`
	// The last time a page using this favicon was visited (in milliseconds
	// since linux epoch).
	LastVisitTimeMs *int64 `protobuf:"varint,3,opt,name=last_visit_time_ms,json=lastVisitTimeMs" json:"last_visit_time_ms,omitempty"`
	// Whether this favicon is currently bookmarked or not.
	IsBookmarked         *bool    `protobuf:"varint,4,opt,name=is_bookmarked,json=isBookmarked" json:"is_bookmarked,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaviconTrackingSpecifics) Reset()         { *m = FaviconTrackingSpecifics{} }
func (m *FaviconTrackingSpecifics) String() string { return proto.CompactTextString(m) }
func (*FaviconTrackingSpecifics) ProtoMessage()    {}
func (*FaviconTrackingSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_635ca53344488cac, []int{0}
}

func (m *FaviconTrackingSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaviconTrackingSpecifics.Unmarshal(m, b)
}
func (m *FaviconTrackingSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaviconTrackingSpecifics.Marshal(b, m, deterministic)
}
func (m *FaviconTrackingSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaviconTrackingSpecifics.Merge(m, src)
}
func (m *FaviconTrackingSpecifics) XXX_Size() int {
	return xxx_messageInfo_FaviconTrackingSpecifics.Size(m)
}
func (m *FaviconTrackingSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_FaviconTrackingSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_FaviconTrackingSpecifics proto.InternalMessageInfo

func (m *FaviconTrackingSpecifics) GetFaviconUrl() string {
	if m != nil && m.FaviconUrl != nil {
		return *m.FaviconUrl
	}
	return ""
}

func (m *FaviconTrackingSpecifics) GetLastVisitTimeMs() int64 {
	if m != nil && m.LastVisitTimeMs != nil {
		return *m.LastVisitTimeMs
	}
	return 0
}

func (m *FaviconTrackingSpecifics) GetIsBookmarked() bool {
	if m != nil && m.IsBookmarked != nil {
		return *m.IsBookmarked
	}
	return false
}

func init() {
	proto.RegisterType((*FaviconTrackingSpecifics)(nil), "sync_pb.FaviconTrackingSpecifics")
}

func init() {
	proto.RegisterFile("favicon_tracking_specifics.proto", fileDescriptor_635ca53344488cac)
}

var fileDescriptor_635ca53344488cac = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8e, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x45, 0x09, 0x23, 0xa8, 0x51, 0x11, 0xb2, 0xca, 0xce, 0xa0, 0x08, 0x03, 0x85, 0x7c, 0x44,
	0x17, 0xe2, 0x46, 0x90, 0xb1, 0xba, 0x0d, 0xe9, 0x33, 0xad, 0x8f, 0x49, 0xf2, 0x42, 0x5e, 0x5a,
	0xf0, 0x23, 0xfc, 0x67, 0x19, 0x3a, 0xd3, 0xed, 0x3d, 0x87, 0xcb, 0x91, 0x66, 0xe7, 0x8f, 0x08,
	0x94, 0x5d, 0xab, 0x1e, 0x46, 0xcc, 0x7b, 0xc7, 0x25, 0x00, 0xee, 0x10, 0xd8, 0x96, 0x4a, 0x8d,
	0xd4, 0x25, 0xff, 0x66, 0x70, 0x65, 0xfb, 0xf8, 0x27, 0xa4, 0x7e, 0x39, 0xd9, 0x9b, 0x59, 0xfe,
	0x58, 0x5c, 0xf5, 0x20, 0x6f, 0x96, 0xa7, 0x43, 0x8d, 0x5a, 0x18, 0xd1, 0x5f, 0x0f, 0x72, 0x9e,
	0x3e, 0x6b, 0x54, 0x2b, 0xa9, 0xa2, 0xe7, 0xe6, 0x8e, 0xc8, 0xd8, 0x5c, 0xc3, 0x14, 0x5c, 0x62,
	0xdd, 0x19, 0xd1, 0x77, 0xc3, 0xfd, 0x44, 0xbe, 0x26, 0xb0, 0xc1, 0x14, 0xde, 0x58, 0x3d, 0xc9,
	0x3b, 0x64, 0xb7, 0x25, 0x1a, 0x93, 0xaf, 0x63, 0xf8, 0xd6, 0x17, 0x46, 0xf4, 0x57, 0xc3, 0x2d,
	0xf2, 0xfa, 0xbc, 0xad, 0x57, 0xf2, 0x99, 0xea, 0xde, 0xc2, 0x4f, 0xa5, 0x84, 0x87, 0x64, 0x81,
	0x52, 0xa1, 0x1c, 0x72, 0x63, 0x3b, 0x25, 0x9f, 0xf2, 0x81, 0xe2, 0x6b, 0xf7, 0x2e, 0xfe, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xf1, 0xa8, 0xfe, 0xcc, 0xe8, 0x00, 0x00, 0x00,
}
