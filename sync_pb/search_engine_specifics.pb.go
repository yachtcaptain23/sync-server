// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search_engine_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Properties of custom search engine sync objects.
type SearchEngineSpecifics struct {
	// The description of the search engine.
	ShortName *string `protobuf:"bytes,1,opt,name=short_name,json=shortName" json:"short_name,omitempty"`
	// The search engine keyword for omnibox access.
	Keyword *string `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	// A URL to the favicon to show in the search engines options page.
	FaviconUrl *string `protobuf:"bytes,3,opt,name=favicon_url,json=faviconUrl" json:"favicon_url,omitempty"`
	// The actual parameterized search engine query URL.
	Url *string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	// A flag signifying whether it is safe to automatically modify this search
	// engine entry or not.
	SafeForAutoreplace *bool `protobuf:"varint,5,opt,name=safe_for_autoreplace,json=safeForAutoreplace" json:"safe_for_autoreplace,omitempty"`
	// The URL to the OSD file this search engine entry came from.
	OriginatingUrl *string `protobuf:"bytes,6,opt,name=originating_url,json=originatingUrl" json:"originating_url,omitempty"`
	// The date this search engine entry was created. A UTC timestamp with units
	// in microseconds.
	DateCreated *int64 `protobuf:"varint,7,opt,name=date_created,json=dateCreated" json:"date_created,omitempty"`
	// A list of supported input encodings.
	InputEncodings *string `protobuf:"bytes,8,opt,name=input_encodings,json=inputEncodings" json:"input_encodings,omitempty"`
	// Obsolete field. This used to represent whether or not this entry is shown
	// in the list of default search engines.
	DeprecatedShowInDefaultList *bool `protobuf:"varint,9,opt,name=deprecated_show_in_default_list,json=deprecatedShowInDefaultList" json:"deprecated_show_in_default_list,omitempty"` // Deprecated: Do not use.
	// The parameterized URL that provides suggestions as the user types.
	SuggestionsUrl *string `protobuf:"bytes,10,opt,name=suggestions_url,json=suggestionsUrl" json:"suggestions_url,omitempty"`
	// The ID associated with the prepopulate data this search engine comes from.
	// Set to zero if it was not prepopulated.
	PrepopulateId *int32 `protobuf:"varint,11,opt,name=prepopulate_id,json=prepopulateId" json:"prepopulate_id,omitempty"`
	// DEPRECATED: Whether to autogenerate a keyword for the search engine or not.
	// Do not write to this field in the future.  We preserve this for now so we
	// can read the field in order to migrate existing data that sets this bit.
	AutogenerateKeyword *bool `protobuf:"varint,12,opt,name=autogenerate_keyword,json=autogenerateKeyword" json:"autogenerate_keyword,omitempty"`
	// ID 13 reserved - previously used by |logo_id|, now deprecated.
	// Obsolete field. This used to represent whether or not this search engine
	// entry was created automatically by an administrator via group policy. This
	// notion no longer exists amongst synced search engines as we do not want to
	// sync managed search engines.
	// optional bool deprecated_created_by_policy = 14;
	InstantUrl *string `protobuf:"bytes,15,opt,name=instant_url,json=instantUrl" json:"instant_url,omitempty"` // Deprecated: Do not use.
	// ID 16 reserved - previously used by |id|, now deprecated.
	// The last time this entry was modified by a user. A UTC timestamp with units
	// in microseconds.
	LastModified *int64 `protobuf:"varint,17,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	// The primary identifier of this search engine entry for Sync.
	SyncGuid *string `protobuf:"bytes,18,opt,name=sync_guid,json=syncGuid" json:"sync_guid,omitempty"`
	// A list of URL patterns that can be used, in addition to |url|, to extract
	// search terms from a URL.
	AlternateUrls             []string `protobuf:"bytes,19,rep,name=alternate_urls,json=alternateUrls" json:"alternate_urls,omitempty"`
	SearchTermsReplacementKey *string  `protobuf:"bytes,20,opt,name=search_terms_replacement_key,json=searchTermsReplacementKey" json:"search_terms_replacement_key,omitempty"` // Deprecated: Do not use.
	// The parameterized URL that provides image results according to the image
	// content or image URL provided by user.
	ImageUrl *string `protobuf:"bytes,21,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	// The following post_params are comma-separated lists used to specify the
	// post parameters for the corresponding search URL.
	SearchUrlPostParams      *string `protobuf:"bytes,22,opt,name=search_url_post_params,json=searchUrlPostParams" json:"search_url_post_params,omitempty"`
	SuggestionsUrlPostParams *string `protobuf:"bytes,23,opt,name=suggestions_url_post_params,json=suggestionsUrlPostParams" json:"suggestions_url_post_params,omitempty"`
	InstantUrlPostParams     *string `protobuf:"bytes,24,opt,name=instant_url_post_params,json=instantUrlPostParams" json:"instant_url_post_params,omitempty"` // Deprecated: Do not use.
	ImageUrlPostParams       *string `protobuf:"bytes,25,opt,name=image_url_post_params,json=imageUrlPostParams" json:"image_url_post_params,omitempty"`
	// The parameterized URL for a search provider specified new tab page.
	NewTabUrl            *string  `protobuf:"bytes,26,opt,name=new_tab_url,json=newTabUrl" json:"new_tab_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchEngineSpecifics) Reset()         { *m = SearchEngineSpecifics{} }
func (m *SearchEngineSpecifics) String() string { return proto.CompactTextString(m) }
func (*SearchEngineSpecifics) ProtoMessage()    {}
func (*SearchEngineSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3d3be3d3167bef, []int{0}
}

func (m *SearchEngineSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEngineSpecifics.Unmarshal(m, b)
}
func (m *SearchEngineSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEngineSpecifics.Marshal(b, m, deterministic)
}
func (m *SearchEngineSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEngineSpecifics.Merge(m, src)
}
func (m *SearchEngineSpecifics) XXX_Size() int {
	return xxx_messageInfo_SearchEngineSpecifics.Size(m)
}
func (m *SearchEngineSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEngineSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEngineSpecifics proto.InternalMessageInfo

func (m *SearchEngineSpecifics) GetShortName() string {
	if m != nil && m.ShortName != nil {
		return *m.ShortName
	}
	return ""
}

func (m *SearchEngineSpecifics) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

func (m *SearchEngineSpecifics) GetFaviconUrl() string {
	if m != nil && m.FaviconUrl != nil {
		return *m.FaviconUrl
	}
	return ""
}

func (m *SearchEngineSpecifics) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *SearchEngineSpecifics) GetSafeForAutoreplace() bool {
	if m != nil && m.SafeForAutoreplace != nil {
		return *m.SafeForAutoreplace
	}
	return false
}

func (m *SearchEngineSpecifics) GetOriginatingUrl() string {
	if m != nil && m.OriginatingUrl != nil {
		return *m.OriginatingUrl
	}
	return ""
}

func (m *SearchEngineSpecifics) GetDateCreated() int64 {
	if m != nil && m.DateCreated != nil {
		return *m.DateCreated
	}
	return 0
}

func (m *SearchEngineSpecifics) GetInputEncodings() string {
	if m != nil && m.InputEncodings != nil {
		return *m.InputEncodings
	}
	return ""
}

// Deprecated: Do not use.
func (m *SearchEngineSpecifics) GetDeprecatedShowInDefaultList() bool {
	if m != nil && m.DeprecatedShowInDefaultList != nil {
		return *m.DeprecatedShowInDefaultList
	}
	return false
}

func (m *SearchEngineSpecifics) GetSuggestionsUrl() string {
	if m != nil && m.SuggestionsUrl != nil {
		return *m.SuggestionsUrl
	}
	return ""
}

func (m *SearchEngineSpecifics) GetPrepopulateId() int32 {
	if m != nil && m.PrepopulateId != nil {
		return *m.PrepopulateId
	}
	return 0
}

func (m *SearchEngineSpecifics) GetAutogenerateKeyword() bool {
	if m != nil && m.AutogenerateKeyword != nil {
		return *m.AutogenerateKeyword
	}
	return false
}

// Deprecated: Do not use.
func (m *SearchEngineSpecifics) GetInstantUrl() string {
	if m != nil && m.InstantUrl != nil {
		return *m.InstantUrl
	}
	return ""
}

func (m *SearchEngineSpecifics) GetLastModified() int64 {
	if m != nil && m.LastModified != nil {
		return *m.LastModified
	}
	return 0
}

func (m *SearchEngineSpecifics) GetSyncGuid() string {
	if m != nil && m.SyncGuid != nil {
		return *m.SyncGuid
	}
	return ""
}

func (m *SearchEngineSpecifics) GetAlternateUrls() []string {
	if m != nil {
		return m.AlternateUrls
	}
	return nil
}

// Deprecated: Do not use.
func (m *SearchEngineSpecifics) GetSearchTermsReplacementKey() string {
	if m != nil && m.SearchTermsReplacementKey != nil {
		return *m.SearchTermsReplacementKey
	}
	return ""
}

func (m *SearchEngineSpecifics) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *SearchEngineSpecifics) GetSearchUrlPostParams() string {
	if m != nil && m.SearchUrlPostParams != nil {
		return *m.SearchUrlPostParams
	}
	return ""
}

func (m *SearchEngineSpecifics) GetSuggestionsUrlPostParams() string {
	if m != nil && m.SuggestionsUrlPostParams != nil {
		return *m.SuggestionsUrlPostParams
	}
	return ""
}

// Deprecated: Do not use.
func (m *SearchEngineSpecifics) GetInstantUrlPostParams() string {
	if m != nil && m.InstantUrlPostParams != nil {
		return *m.InstantUrlPostParams
	}
	return ""
}

func (m *SearchEngineSpecifics) GetImageUrlPostParams() string {
	if m != nil && m.ImageUrlPostParams != nil {
		return *m.ImageUrlPostParams
	}
	return ""
}

func (m *SearchEngineSpecifics) GetNewTabUrl() string {
	if m != nil && m.NewTabUrl != nil {
		return *m.NewTabUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchEngineSpecifics)(nil), "sync_pb.SearchEngineSpecifics")
}

func init() {
	proto.RegisterFile("search_engine_specifics.proto", fileDescriptor_6e3d3be3d3167bef)
}

var fileDescriptor_6e3d3be3d3167bef = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x54, 0x5f, 0x4f, 0xdb, 0x3e,
	0x14, 0x55, 0xe8, 0x8f, 0x5f, 0xe9, 0x2d, 0x7f, 0x36, 0x53, 0xc0, 0x8c, 0x31, 0xba, 0x21, 0xb4,
	0x4a, 0x93, 0xaa, 0xa1, 0x3d, 0xed, 0x61, 0x0f, 0x83, 0xb1, 0x81, 0xd8, 0x26, 0x14, 0xe8, 0xb3,
	0x65, 0x92, 0x9b, 0xd4, 0x9a, 0x63, 0x47, 0xb6, 0xb3, 0x8a, 0x8f, 0xbc, 0x6f, 0x31, 0xd9, 0x49,
	0xdb, 0x74, 0x6f, 0xc9, 0x39, 0xe7, 0xfa, 0xdc, 0x73, 0xaf, 0x13, 0x38, 0xb6, 0xc8, 0x4d, 0x32,
	0x65, 0xa8, 0x72, 0xa1, 0x90, 0xd9, 0x12, 0x13, 0x91, 0x89, 0xc4, 0x8e, 0x4b, 0xa3, 0x9d, 0x26,
	0x5d, 0xfb, 0xa4, 0x12, 0x56, 0x3e, 0xbe, 0xf9, 0xd3, 0x85, 0xbd, 0xfb, 0x20, 0xbd, 0x0a, 0xca,
	0xfb, 0xb9, 0x90, 0x1c, 0x03, 0xd8, 0xa9, 0x36, 0x8e, 0x29, 0x5e, 0x20, 0x8d, 0x86, 0xd1, 0xa8,
	0x17, 0xf7, 0x02, 0xf2, 0x93, 0x17, 0x48, 0x28, 0x74, 0x7f, 0xe1, 0xd3, 0x4c, 0x9b, 0x94, 0xae,
	0x05, 0x6e, 0xfe, 0x4a, 0x4e, 0xa0, 0x9f, 0xf1, 0xdf, 0x22, 0xd1, 0x8a, 0x55, 0x46, 0xd2, 0x4e,
	0x60, 0xa1, 0x81, 0x26, 0x46, 0x92, 0x67, 0xd0, 0xf1, 0xc4, 0x7f, 0x81, 0xf0, 0x8f, 0xe4, 0x3d,
	0x0c, 0x2c, 0xcf, 0x90, 0x65, 0xda, 0x30, 0x5e, 0x39, 0x6d, 0xb0, 0x94, 0x3c, 0x41, 0xba, 0x3e,
	0x8c, 0x46, 0x1b, 0x31, 0xf1, 0xdc, 0x57, 0x6d, 0x3e, 0x2f, 0x19, 0xf2, 0x16, 0x76, 0xb4, 0x11,
	0xb9, 0x50, 0xdc, 0x09, 0x95, 0x07, 0xa3, 0xff, 0xc3, 0x79, 0xdb, 0x2d, 0xd8, 0x9b, 0xbd, 0x86,
	0xcd, 0x94, 0x3b, 0x64, 0x89, 0x41, 0xee, 0x30, 0xa5, 0xdd, 0x61, 0x34, 0xea, 0xc4, 0x7d, 0x8f,
	0x5d, 0xd6, 0x90, 0x3f, 0x4b, 0xa8, 0xb2, 0x72, 0x0c, 0x55, 0xa2, 0x53, 0xa1, 0x72, 0x4b, 0x37,
	0xea, 0xb3, 0x02, 0x7c, 0x35, 0x47, 0xc9, 0x35, 0x9c, 0xa4, 0x58, 0x1a, 0x4c, 0x7c, 0x19, 0xb3,
	0x53, 0x3d, 0x63, 0x42, 0xb1, 0x14, 0x33, 0x5e, 0x49, 0xc7, 0xa4, 0xb0, 0x8e, 0xf6, 0x7c, 0xc7,
	0x17, 0x6b, 0x34, 0x8a, 0x8f, 0x96, 0xd2, 0xfb, 0xa9, 0x9e, 0xdd, 0xa8, 0x2f, 0xb5, 0xee, 0xbb,
	0xb0, 0xce, 0x5b, 0xda, 0x2a, 0xcf, 0xd1, 0x3a, 0xa1, 0x95, 0x0d, 0xed, 0x43, 0x6d, 0xd9, 0x82,
	0x7d, 0xfb, 0x67, 0xb0, 0x5d, 0x1a, 0x2c, 0x75, 0x59, 0x49, 0x9f, 0x42, 0xa4, 0xb4, 0x3f, 0x8c,
	0x46, 0xeb, 0xf1, 0x56, 0x0b, 0xbd, 0x49, 0xc9, 0x39, 0x0c, 0xfc, 0xdc, 0x72, 0x54, 0x68, 0xbc,
	0x6e, 0xbe, 0x9a, 0xcd, 0x30, 0xc0, 0xdd, 0x36, 0x77, 0xdb, 0xac, 0xe9, 0x14, 0xfa, 0x42, 0x59,
	0xc7, 0x95, 0x0b, 0xf6, 0x3b, 0xde, 0x3e, 0x34, 0x0e, 0x0d, 0xec, 0xed, 0x4f, 0x61, 0x4b, 0x72,
	0xeb, 0x58, 0xa1, 0x53, 0x91, 0x09, 0x4c, 0xe9, 0xf3, 0x30, 0xbe, 0x4d, 0x0f, 0xfe, 0x68, 0x30,
	0x72, 0x04, 0xbd, 0x70, 0x9d, 0xf2, 0x4a, 0xa4, 0x94, 0x84, 0x18, 0x1b, 0x1e, 0xf8, 0x56, 0x89,
	0xd4, 0x07, 0xe0, 0xd2, 0xa1, 0x51, 0xbe, 0xad, 0xca, 0x48, 0x4b, 0x77, 0x87, 0x9d, 0x51, 0x2f,
	0xde, 0x5a, 0xa0, 0x13, 0x23, 0x2d, 0xb9, 0x84, 0x97, 0xcd, 0x8d, 0x75, 0x68, 0x0a, 0xcb, 0x9a,
	0x3d, 0x17, 0xa8, 0x9c, 0x0f, 0x43, 0x07, 0x8b, 0xf6, 0x0e, 0x6b, 0xdd, 0x83, 0x97, 0xc5, 0x4b,
	0xd5, 0x2d, 0x3e, 0xf9, 0x46, 0x44, 0xc1, 0xf3, 0xe0, 0x43, 0xf7, 0xea, 0x46, 0x02, 0xe0, 0xa3,
	0x7c, 0x80, 0xfd, 0xc6, 0xa1, 0x32, 0x92, 0x95, 0xda, 0x3a, 0x56, 0x72, 0xc3, 0x0b, 0x4b, 0xf7,
	0x83, 0x72, 0xb7, 0x66, 0x27, 0x46, 0xde, 0x69, 0xeb, 0xee, 0x02, 0x45, 0x3e, 0xc1, 0xd1, 0x3f,
	0x7b, 0x5a, 0xa9, 0x3c, 0x08, 0x95, 0x74, 0x75, 0x67, 0xad, 0xf2, 0x8f, 0x70, 0xd0, 0x9a, 0xf1,
	0x4a, 0x29, 0x5d, 0x04, 0x1a, 0x2c, 0xe7, 0xdd, 0x2a, 0x3d, 0x87, 0xbd, 0x45, 0x96, 0x95, 0xc2,
	0xc3, 0xe0, 0x49, 0xe6, 0xb9, 0x5a, 0x25, 0xaf, 0xa0, 0xaf, 0x70, 0xc6, 0x1c, 0x7f, 0x0c, 0x03,
	0x78, 0x51, 0x7f, 0xb2, 0x0a, 0x67, 0x0f, 0xfc, 0x71, 0x62, 0xe4, 0xc5, 0x3b, 0x38, 0xd3, 0x26,
	0x1f, 0x27, 0x53, 0xa3, 0x0b, 0x51, 0x15, 0xe3, 0x44, 0x17, 0xa5, 0x56, 0xa8, 0x9c, 0x1d, 0xfb,
	0x75, 0xd5, 0xbf, 0x86, 0x44, 0xcb, 0xeb, 0xce, 0x5d, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff, 0x98,
	0x6f, 0xe5, 0x10, 0x41, 0x04, 0x00, 0x00,
}
