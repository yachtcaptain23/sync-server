// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_event_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserEventSpecifics_Translation_Interaction int32

const (
	UserEventSpecifics_Translation_UNKNOWN UserEventSpecifics_Translation_Interaction = 0
	UserEventSpecifics_Translation_ACCEPT  UserEventSpecifics_Translation_Interaction = 1
	UserEventSpecifics_Translation_DECLINE UserEventSpecifics_Translation_Interaction = 2
	// This happens when user scroll or click outside the UI without
	// translation.
	UserEventSpecifics_Translation_IGNORED UserEventSpecifics_Translation_Interaction = 3
	// This happens when user choose to close the translation window without
	// translation.
	UserEventSpecifics_Translation_DISMISSED UserEventSpecifics_Translation_Interaction = 4
	// User manually entered either language.
	// In this case, from_language_code and to_language_code will be user
	// chosen values.
	UserEventSpecifics_Translation_MANUAL UserEventSpecifics_Translation_Interaction = 5
	// User choose to revert the translation, in this case, from_language_code
	// and to_language_code will be previous chosen values.
	UserEventSpecifics_Translation_TRANSLATION_REVERTED UserEventSpecifics_Translation_Interaction = 6
	// Automatically triggered translation.
	// User sets always translate in user settings.
	UserEventSpecifics_Translation_AUTO_TRANSLATION_BY_PREF UserEventSpecifics_Translation_Interaction = 7
	// User navigated through a click from a translated page.
	UserEventSpecifics_Translation_AUTO_TRANSLATION_BY_LINK UserEventSpecifics_Translation_Interaction = 8
	// Failed to initialize the translate script, this can happen for iOS due
	// to CSPs.
	UserEventSpecifics_Translation_INITIALIZATION_ERROR UserEventSpecifics_Translation_Interaction = 9
)

var UserEventSpecifics_Translation_Interaction_name = map[int32]string{
	0: "UNKNOWN",
	1: "ACCEPT",
	2: "DECLINE",
	3: "IGNORED",
	4: "DISMISSED",
	5: "MANUAL",
	6: "TRANSLATION_REVERTED",
	7: "AUTO_TRANSLATION_BY_PREF",
	8: "AUTO_TRANSLATION_BY_LINK",
	9: "INITIALIZATION_ERROR",
}

var UserEventSpecifics_Translation_Interaction_value = map[string]int32{
	"UNKNOWN":                  0,
	"ACCEPT":                   1,
	"DECLINE":                  2,
	"IGNORED":                  3,
	"DISMISSED":                4,
	"MANUAL":                   5,
	"TRANSLATION_REVERTED":     6,
	"AUTO_TRANSLATION_BY_PREF": 7,
	"AUTO_TRANSLATION_BY_LINK": 8,
	"INITIALIZATION_ERROR":     9,
}

func (x UserEventSpecifics_Translation_Interaction) Enum() *UserEventSpecifics_Translation_Interaction {
	p := new(UserEventSpecifics_Translation_Interaction)
	*p = x
	return p
}

func (x UserEventSpecifics_Translation_Interaction) String() string {
	return proto.EnumName(UserEventSpecifics_Translation_Interaction_name, int32(x))
}

func (x *UserEventSpecifics_Translation_Interaction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserEventSpecifics_Translation_Interaction_value, data, "UserEventSpecifics_Translation_Interaction")
	if err != nil {
		return err
	}
	*x = UserEventSpecifics_Translation_Interaction(value)
	return nil
}

func (UserEventSpecifics_Translation_Interaction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 3, 0}
}

// Which feature does the consent apply to?
type UserEventSpecifics_UserConsent_Feature int32

const (
	UserEventSpecifics_UserConsent_FEATURE_UNSPECIFIED     UserEventSpecifics_UserConsent_Feature = 0
	UserEventSpecifics_UserConsent_CHROME_SYNC             UserEventSpecifics_UserConsent_Feature = 1
	UserEventSpecifics_UserConsent_PLAY_STORE              UserEventSpecifics_UserConsent_Feature = 2
	UserEventSpecifics_UserConsent_BACKUP_AND_RESTORE      UserEventSpecifics_UserConsent_Feature = 3
	UserEventSpecifics_UserConsent_GOOGLE_LOCATION_SERVICE UserEventSpecifics_UserConsent_Feature = 4
	UserEventSpecifics_UserConsent_CHROME_UNIFIED_CONSENT  UserEventSpecifics_UserConsent_Feature = 5
	// TODO(markusheintz): ASSISTANT_ACTIVITY_CONTROL was only added as
	// emergency fallback. Remove if not needed.
	UserEventSpecifics_UserConsent_ASSISTANT_ACTIVITY_CONTROL UserEventSpecifics_UserConsent_Feature = 6
)

var UserEventSpecifics_UserConsent_Feature_name = map[int32]string{
	0: "FEATURE_UNSPECIFIED",
	1: "CHROME_SYNC",
	2: "PLAY_STORE",
	3: "BACKUP_AND_RESTORE",
	4: "GOOGLE_LOCATION_SERVICE",
	5: "CHROME_UNIFIED_CONSENT",
	6: "ASSISTANT_ACTIVITY_CONTROL",
}

var UserEventSpecifics_UserConsent_Feature_value = map[string]int32{
	"FEATURE_UNSPECIFIED":        0,
	"CHROME_SYNC":                1,
	"PLAY_STORE":                 2,
	"BACKUP_AND_RESTORE":         3,
	"GOOGLE_LOCATION_SERVICE":    4,
	"CHROME_UNIFIED_CONSENT":     5,
	"ASSISTANT_ACTIVITY_CONTROL": 6,
}

func (x UserEventSpecifics_UserConsent_Feature) Enum() *UserEventSpecifics_UserConsent_Feature {
	p := new(UserEventSpecifics_UserConsent_Feature)
	*p = x
	return p
}

func (x UserEventSpecifics_UserConsent_Feature) String() string {
	return proto.EnumName(UserEventSpecifics_UserConsent_Feature_name, int32(x))
}

func (x *UserEventSpecifics_UserConsent_Feature) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserEventSpecifics_UserConsent_Feature_value, data, "UserEventSpecifics_UserConsent_Feature")
	if err != nil {
		return err
	}
	*x = UserEventSpecifics_UserConsent_Feature(value)
	return nil
}

func (UserEventSpecifics_UserConsent_Feature) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 4, 0}
}

type UserEventSpecifics_GaiaPasswordCaptured_EventTrigger int32

const (
	UserEventSpecifics_GaiaPasswordCaptured_UNSPECIFIED UserEventSpecifics_GaiaPasswordCaptured_EventTrigger = 0
	// Event added because user logged in.
	UserEventSpecifics_GaiaPasswordCaptured_USER_LOGGED_IN UserEventSpecifics_GaiaPasswordCaptured_EventTrigger = 1
	// Event added because 28d timer fired.
	UserEventSpecifics_GaiaPasswordCaptured_EXPIRED_28D_TIMER UserEventSpecifics_GaiaPasswordCaptured_EventTrigger = 2
)

var UserEventSpecifics_GaiaPasswordCaptured_EventTrigger_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "USER_LOGGED_IN",
	2: "EXPIRED_28D_TIMER",
}

var UserEventSpecifics_GaiaPasswordCaptured_EventTrigger_value = map[string]int32{
	"UNSPECIFIED":       0,
	"USER_LOGGED_IN":    1,
	"EXPIRED_28D_TIMER": 2,
}

func (x UserEventSpecifics_GaiaPasswordCaptured_EventTrigger) Enum() *UserEventSpecifics_GaiaPasswordCaptured_EventTrigger {
	p := new(UserEventSpecifics_GaiaPasswordCaptured_EventTrigger)
	*p = x
	return p
}

func (x UserEventSpecifics_GaiaPasswordCaptured_EventTrigger) String() string {
	return proto.EnumName(UserEventSpecifics_GaiaPasswordCaptured_EventTrigger_name, int32(x))
}

func (x *UserEventSpecifics_GaiaPasswordCaptured_EventTrigger) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserEventSpecifics_GaiaPasswordCaptured_EventTrigger_value, data, "UserEventSpecifics_GaiaPasswordCaptured_EventTrigger")
	if err != nil {
		return err
	}
	*x = UserEventSpecifics_GaiaPasswordCaptured_EventTrigger(value)
	return nil
}

func (UserEventSpecifics_GaiaPasswordCaptured_EventTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 5, 0}
}

type UserEventSpecifics struct {
	// Time of event, as measured by client in microseconds since Windows epoch.
	EventTimeUsec *int64 `protobuf:"varint,1,opt,name=event_time_usec,json=eventTimeUsec" json:"event_time_usec,omitempty"`
	// The |global_id| field of the associated navigation, if there is one.
	NavigationId *int64 `protobuf:"varint,2,opt,name=navigation_id,json=navigationId" json:"navigation_id,omitempty"`
	// On startup we generate a new random id to identify which FieldTrialEvents
	// other events belonged to.
	SessionId *uint64 `protobuf:"fixed64,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*UserEventSpecifics_TestEvent
	//	*UserEventSpecifics_FieldTrialEvent
	//	*UserEventSpecifics_LanguageDetectionEvent
	//	*UserEventSpecifics_TranslationEvent
	//	*UserEventSpecifics_UserConsent_
	//	*UserEventSpecifics_GaiaPasswordReuseEvent
	//	*UserEventSpecifics_GaiaPasswordCapturedEvent
	Event                isUserEventSpecifics_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UserEventSpecifics) Reset()         { *m = UserEventSpecifics{} }
func (m *UserEventSpecifics) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics) ProtoMessage()    {}
func (*UserEventSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0}
}

func (m *UserEventSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics.Unmarshal(m, b)
}
func (m *UserEventSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics.Merge(m, src)
}
func (m *UserEventSpecifics) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics.Size(m)
}
func (m *UserEventSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics proto.InternalMessageInfo

func (m *UserEventSpecifics) GetEventTimeUsec() int64 {
	if m != nil && m.EventTimeUsec != nil {
		return *m.EventTimeUsec
	}
	return 0
}

func (m *UserEventSpecifics) GetNavigationId() int64 {
	if m != nil && m.NavigationId != nil {
		return *m.NavigationId
	}
	return 0
}

func (m *UserEventSpecifics) GetSessionId() uint64 {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return 0
}

type isUserEventSpecifics_Event interface {
	isUserEventSpecifics_Event()
}

type UserEventSpecifics_TestEvent struct {
	TestEvent *UserEventSpecifics_Test `protobuf:"bytes,8,opt,name=test_event,json=testEvent,oneof"`
}

type UserEventSpecifics_FieldTrialEvent struct {
	FieldTrialEvent *UserEventSpecifics_FieldTrial `protobuf:"bytes,9,opt,name=field_trial_event,json=fieldTrialEvent,oneof"`
}

type UserEventSpecifics_LanguageDetectionEvent struct {
	LanguageDetectionEvent *UserEventSpecifics_LanguageDetection `protobuf:"bytes,10,opt,name=language_detection_event,json=languageDetectionEvent,oneof"`
}

type UserEventSpecifics_TranslationEvent struct {
	TranslationEvent *UserEventSpecifics_Translation `protobuf:"bytes,11,opt,name=translation_event,json=translationEvent,oneof"`
}

type UserEventSpecifics_UserConsent_ struct {
	UserConsent *UserEventSpecifics_UserConsent `protobuf:"bytes,12,opt,name=user_consent,json=userConsent,oneof"`
}

type UserEventSpecifics_GaiaPasswordReuseEvent struct {
	GaiaPasswordReuseEvent *GaiaPasswordReuse `protobuf:"bytes,104,opt,name=gaia_password_reuse_event,json=gaiaPasswordReuseEvent,oneof"`
}

type UserEventSpecifics_GaiaPasswordCapturedEvent struct {
	GaiaPasswordCapturedEvent *UserEventSpecifics_GaiaPasswordCaptured `protobuf:"bytes,15,opt,name=gaia_password_captured_event,json=gaiaPasswordCapturedEvent,oneof"`
}

func (*UserEventSpecifics_TestEvent) isUserEventSpecifics_Event() {}

func (*UserEventSpecifics_FieldTrialEvent) isUserEventSpecifics_Event() {}

func (*UserEventSpecifics_LanguageDetectionEvent) isUserEventSpecifics_Event() {}

func (*UserEventSpecifics_TranslationEvent) isUserEventSpecifics_Event() {}

func (*UserEventSpecifics_UserConsent_) isUserEventSpecifics_Event() {}

func (*UserEventSpecifics_GaiaPasswordReuseEvent) isUserEventSpecifics_Event() {}

func (*UserEventSpecifics_GaiaPasswordCapturedEvent) isUserEventSpecifics_Event() {}

func (m *UserEventSpecifics) GetEvent() isUserEventSpecifics_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *UserEventSpecifics) GetTestEvent() *UserEventSpecifics_Test {
	if x, ok := m.GetEvent().(*UserEventSpecifics_TestEvent); ok {
		return x.TestEvent
	}
	return nil
}

func (m *UserEventSpecifics) GetFieldTrialEvent() *UserEventSpecifics_FieldTrial {
	if x, ok := m.GetEvent().(*UserEventSpecifics_FieldTrialEvent); ok {
		return x.FieldTrialEvent
	}
	return nil
}

func (m *UserEventSpecifics) GetLanguageDetectionEvent() *UserEventSpecifics_LanguageDetection {
	if x, ok := m.GetEvent().(*UserEventSpecifics_LanguageDetectionEvent); ok {
		return x.LanguageDetectionEvent
	}
	return nil
}

func (m *UserEventSpecifics) GetTranslationEvent() *UserEventSpecifics_Translation {
	if x, ok := m.GetEvent().(*UserEventSpecifics_TranslationEvent); ok {
		return x.TranslationEvent
	}
	return nil
}

func (m *UserEventSpecifics) GetUserConsent() *UserEventSpecifics_UserConsent {
	if x, ok := m.GetEvent().(*UserEventSpecifics_UserConsent_); ok {
		return x.UserConsent
	}
	return nil
}

func (m *UserEventSpecifics) GetGaiaPasswordReuseEvent() *GaiaPasswordReuse {
	if x, ok := m.GetEvent().(*UserEventSpecifics_GaiaPasswordReuseEvent); ok {
		return x.GaiaPasswordReuseEvent
	}
	return nil
}

func (m *UserEventSpecifics) GetGaiaPasswordCapturedEvent() *UserEventSpecifics_GaiaPasswordCaptured {
	if x, ok := m.GetEvent().(*UserEventSpecifics_GaiaPasswordCapturedEvent); ok {
		return x.GaiaPasswordCapturedEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UserEventSpecifics) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UserEventSpecifics_TestEvent)(nil),
		(*UserEventSpecifics_FieldTrialEvent)(nil),
		(*UserEventSpecifics_LanguageDetectionEvent)(nil),
		(*UserEventSpecifics_TranslationEvent)(nil),
		(*UserEventSpecifics_UserConsent_)(nil),
		(*UserEventSpecifics_GaiaPasswordReuseEvent)(nil),
		(*UserEventSpecifics_GaiaPasswordCapturedEvent)(nil),
	}
}

// Used for testing and debugging EventLog system.
type UserEventSpecifics_Test struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEventSpecifics_Test) Reset()         { *m = UserEventSpecifics_Test{} }
func (m *UserEventSpecifics_Test) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics_Test) ProtoMessage()    {}
func (*UserEventSpecifics_Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 0}
}

func (m *UserEventSpecifics_Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_Test.Unmarshal(m, b)
}
func (m *UserEventSpecifics_Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_Test.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_Test.Merge(m, src)
}
func (m *UserEventSpecifics_Test) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_Test.Size(m)
}
func (m *UserEventSpecifics_Test) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_Test.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_Test proto.InternalMessageInfo

// Reports field trial membership for the subset of trials that have been
// registered as important to other event types.
type UserEventSpecifics_FieldTrial struct {
	VariationIds         []uint32 `protobuf:"fixed32,1,rep,name=variation_ids,json=variationIds" json:"variation_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEventSpecifics_FieldTrial) Reset()         { *m = UserEventSpecifics_FieldTrial{} }
func (m *UserEventSpecifics_FieldTrial) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics_FieldTrial) ProtoMessage()    {}
func (*UserEventSpecifics_FieldTrial) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 1}
}

func (m *UserEventSpecifics_FieldTrial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_FieldTrial.Unmarshal(m, b)
}
func (m *UserEventSpecifics_FieldTrial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_FieldTrial.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_FieldTrial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_FieldTrial.Merge(m, src)
}
func (m *UserEventSpecifics_FieldTrial) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_FieldTrial.Size(m)
}
func (m *UserEventSpecifics_FieldTrial) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_FieldTrial.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_FieldTrial proto.InternalMessageInfo

func (m *UserEventSpecifics_FieldTrial) GetVariationIds() []uint32 {
	if m != nil {
		return m.VariationIds
	}
	return nil
}

// Language detection output.
type UserEventSpecifics_LanguageDetection struct {
	// Top n languages. Typically we just log the top language, but for page
	// that we're not confident about, we may log up to 3 top languages in
	// descending order.
	DetectedLanguages []*UserEventSpecifics_LanguageDetection_Language `protobuf:"bytes,1,rep,name=detected_languages,json=detectedLanguages" json:"detected_languages,omitempty"`
	// Adopted language code is the code of final determined language.
	// It will be stored only if it's different from the first detected
	// language.
	AdoptedLanguageCode  *string  `protobuf:"bytes,2,opt,name=adopted_language_code,json=adoptedLanguageCode" json:"adopted_language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEventSpecifics_LanguageDetection) Reset()         { *m = UserEventSpecifics_LanguageDetection{} }
func (m *UserEventSpecifics_LanguageDetection) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics_LanguageDetection) ProtoMessage()    {}
func (*UserEventSpecifics_LanguageDetection) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 2}
}

func (m *UserEventSpecifics_LanguageDetection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_LanguageDetection.Unmarshal(m, b)
}
func (m *UserEventSpecifics_LanguageDetection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_LanguageDetection.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_LanguageDetection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_LanguageDetection.Merge(m, src)
}
func (m *UserEventSpecifics_LanguageDetection) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_LanguageDetection.Size(m)
}
func (m *UserEventSpecifics_LanguageDetection) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_LanguageDetection.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_LanguageDetection proto.InternalMessageInfo

func (m *UserEventSpecifics_LanguageDetection) GetDetectedLanguages() []*UserEventSpecifics_LanguageDetection_Language {
	if m != nil {
		return m.DetectedLanguages
	}
	return nil
}

func (m *UserEventSpecifics_LanguageDetection) GetAdoptedLanguageCode() string {
	if m != nil && m.AdoptedLanguageCode != nil {
		return *m.AdoptedLanguageCode
	}
	return ""
}

type UserEventSpecifics_LanguageDetection_Language struct {
	// ISO 639 language code will be used.
	LanguageCode *string `protobuf:"bytes,1,opt,name=language_code,json=languageCode" json:"language_code,omitempty"`
	// Whether the detected language is reliable, note this is determined by
	// the CLD3.
	IsReliable           *bool    `protobuf:"varint,2,opt,name=is_reliable,json=isReliable" json:"is_reliable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEventSpecifics_LanguageDetection_Language) Reset() {
	*m = UserEventSpecifics_LanguageDetection_Language{}
}
func (m *UserEventSpecifics_LanguageDetection_Language) String() string {
	return proto.CompactTextString(m)
}
func (*UserEventSpecifics_LanguageDetection_Language) ProtoMessage() {}
func (*UserEventSpecifics_LanguageDetection_Language) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 2, 0}
}

func (m *UserEventSpecifics_LanguageDetection_Language) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_LanguageDetection_Language.Unmarshal(m, b)
}
func (m *UserEventSpecifics_LanguageDetection_Language) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_LanguageDetection_Language.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_LanguageDetection_Language) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_LanguageDetection_Language.Merge(m, src)
}
func (m *UserEventSpecifics_LanguageDetection_Language) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_LanguageDetection_Language.Size(m)
}
func (m *UserEventSpecifics_LanguageDetection_Language) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_LanguageDetection_Language.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_LanguageDetection_Language proto.InternalMessageInfo

func (m *UserEventSpecifics_LanguageDetection_Language) GetLanguageCode() string {
	if m != nil && m.LanguageCode != nil {
		return *m.LanguageCode
	}
	return ""
}

func (m *UserEventSpecifics_LanguageDetection_Language) GetIsReliable() bool {
	if m != nil && m.IsReliable != nil {
		return *m.IsReliable
	}
	return false
}

// User translated a page or interacted with translate suggestion.
type UserEventSpecifics_Translation struct {
	// Source language of the translation.
	FromLanguageCode *string `protobuf:"bytes,1,opt,name=from_language_code,json=fromLanguageCode" json:"from_language_code,omitempty"`
	// Target language of the translation.
	ToLanguageCode       *string                                     `protobuf:"bytes,2,opt,name=to_language_code,json=toLanguageCode" json:"to_language_code,omitempty"`
	Interaction          *UserEventSpecifics_Translation_Interaction `protobuf:"varint,3,opt,name=interaction,enum=sync_pb.UserEventSpecifics_Translation_Interaction" json:"interaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *UserEventSpecifics_Translation) Reset()         { *m = UserEventSpecifics_Translation{} }
func (m *UserEventSpecifics_Translation) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics_Translation) ProtoMessage()    {}
func (*UserEventSpecifics_Translation) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 3}
}

func (m *UserEventSpecifics_Translation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_Translation.Unmarshal(m, b)
}
func (m *UserEventSpecifics_Translation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_Translation.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_Translation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_Translation.Merge(m, src)
}
func (m *UserEventSpecifics_Translation) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_Translation.Size(m)
}
func (m *UserEventSpecifics_Translation) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_Translation.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_Translation proto.InternalMessageInfo

func (m *UserEventSpecifics_Translation) GetFromLanguageCode() string {
	if m != nil && m.FromLanguageCode != nil {
		return *m.FromLanguageCode
	}
	return ""
}

func (m *UserEventSpecifics_Translation) GetToLanguageCode() string {
	if m != nil && m.ToLanguageCode != nil {
		return *m.ToLanguageCode
	}
	return ""
}

func (m *UserEventSpecifics_Translation) GetInteraction() UserEventSpecifics_Translation_Interaction {
	if m != nil && m.Interaction != nil {
		return *m.Interaction
	}
	return UserEventSpecifics_Translation_UNKNOWN
}

// User consented to the usage of a feature or denied/revoked a consent.
// Next id: 14
type UserEventSpecifics_UserConsent struct {
	// The UI language Chrome is using, represented as the IETF language tag
	// defined in BCP 47. The region subtag is not included when it adds no
	// distinguishing information to the language tag (e.g. both "en-US"
	// and "fr" are correct here).
	Locale *string `protobuf:"bytes,4,opt,name=locale" json:"locale,omitempty"`
	// The local time on the client when the user consent was recorded. The time
	// as measured by client is given in microseconds since Windows epoch. This
	// is needed since user consent recording may happen when a client is
	// offline.
	ClientConsentTimeUsec *int64 `protobuf:"varint,12,opt,name=client_consent_time_usec,json=clientConsentTimeUsec" json:"client_consent_time_usec,omitempty"`
	// Types that are valid to be assigned to Consent:
	//	*UserEventSpecifics_UserConsent_SyncConsent
	//	*UserEventSpecifics_UserConsent_ArcBackupAndRestoreConsent
	//	*UserEventSpecifics_UserConsent_ArcLocationServiceConsent
	//	*UserEventSpecifics_UserConsent_ArcPlayTermsOfServiceConsent
	//	*UserEventSpecifics_UserConsent_ArcMetricsAndUsageConsent
	//	*UserEventSpecifics_UserConsent_UnifiedConsent
	Consent isUserEventSpecifics_UserConsent_Consent `protobuf_oneof:"consent"`
	// The account ID of the user who gave the consent. This field is used
	// by UserEventService to distinguish consents from different users,
	// as UserConsent does not get deleted when a user signs out. However,
	// it should be cleared before being sent over the wire, as the UserEvent
	// is sent over an authenticated channel, so this information would be
	// redundant.
	//
	// For semantics and usage of the |account_id| in the signin codebase,
	// see PrimaryAccountManager::GetAuthenticatedAccountId()
	// or AccountInfo::account_id.
	AccountId *string                                 `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Feature   *UserEventSpecifics_UserConsent_Feature `protobuf:"varint,1,opt,name=feature,enum=sync_pb.UserEventSpecifics_UserConsent_Feature" json:"feature,omitempty"` // Deprecated: Do not use.
	// Ids of the strings of the consent text presented to the user.
	DescriptionGrdIds []int32 `protobuf:"varint,2,rep,name=description_grd_ids,json=descriptionGrdIds" json:"description_grd_ids,omitempty"` // Deprecated: Do not use.
	// Id of the string of the UI element the user clicked when consenting.
	ConfirmationGrdId *int32 `protobuf:"varint,3,opt,name=confirmation_grd_id,json=confirmationGrdId" json:"confirmation_grd_id,omitempty"` // Deprecated: Do not use.
	// Was the consent for |feature| given or not given (denied/revoked)?
	Status               *UserConsentTypes_ConsentStatus `protobuf:"varint,5,opt,name=status,enum=sync_pb.UserConsentTypes_ConsentStatus" json:"status,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UserEventSpecifics_UserConsent) Reset()         { *m = UserEventSpecifics_UserConsent{} }
func (m *UserEventSpecifics_UserConsent) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics_UserConsent) ProtoMessage()    {}
func (*UserEventSpecifics_UserConsent) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 4}
}

func (m *UserEventSpecifics_UserConsent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_UserConsent.Unmarshal(m, b)
}
func (m *UserEventSpecifics_UserConsent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_UserConsent.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_UserConsent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_UserConsent.Merge(m, src)
}
func (m *UserEventSpecifics_UserConsent) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_UserConsent.Size(m)
}
func (m *UserEventSpecifics_UserConsent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_UserConsent.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_UserConsent proto.InternalMessageInfo

func (m *UserEventSpecifics_UserConsent) GetLocale() string {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return ""
}

func (m *UserEventSpecifics_UserConsent) GetClientConsentTimeUsec() int64 {
	if m != nil && m.ClientConsentTimeUsec != nil {
		return *m.ClientConsentTimeUsec
	}
	return 0
}

type isUserEventSpecifics_UserConsent_Consent interface {
	isUserEventSpecifics_UserConsent_Consent()
}

type UserEventSpecifics_UserConsent_SyncConsent struct {
	SyncConsent *UserConsentTypes_SyncConsent `protobuf:"bytes,7,opt,name=sync_consent,json=syncConsent,oneof"`
}

type UserEventSpecifics_UserConsent_ArcBackupAndRestoreConsent struct {
	ArcBackupAndRestoreConsent *UserConsentTypes_ArcBackupAndRestoreConsent `protobuf:"bytes,8,opt,name=arc_backup_and_restore_consent,json=arcBackupAndRestoreConsent,oneof"`
}

type UserEventSpecifics_UserConsent_ArcLocationServiceConsent struct {
	ArcLocationServiceConsent *UserConsentTypes_ArcGoogleLocationServiceConsent `protobuf:"bytes,9,opt,name=arc_location_service_consent,json=arcLocationServiceConsent,oneof"`
}

type UserEventSpecifics_UserConsent_ArcPlayTermsOfServiceConsent struct {
	ArcPlayTermsOfServiceConsent *UserConsentTypes_ArcPlayTermsOfServiceConsent `protobuf:"bytes,10,opt,name=arc_play_terms_of_service_consent,json=arcPlayTermsOfServiceConsent,oneof"`
}

type UserEventSpecifics_UserConsent_ArcMetricsAndUsageConsent struct {
	ArcMetricsAndUsageConsent *UserConsentTypes_ArcMetricsAndUsageConsent `protobuf:"bytes,11,opt,name=arc_metrics_and_usage_consent,json=arcMetricsAndUsageConsent,oneof"`
}

type UserEventSpecifics_UserConsent_UnifiedConsent struct {
	UnifiedConsent *UserConsentTypes_UnifiedConsent `protobuf:"bytes,13,opt,name=unified_consent,json=unifiedConsent,oneof"`
}

func (*UserEventSpecifics_UserConsent_SyncConsent) isUserEventSpecifics_UserConsent_Consent() {}

func (*UserEventSpecifics_UserConsent_ArcBackupAndRestoreConsent) isUserEventSpecifics_UserConsent_Consent() {
}

func (*UserEventSpecifics_UserConsent_ArcLocationServiceConsent) isUserEventSpecifics_UserConsent_Consent() {
}

func (*UserEventSpecifics_UserConsent_ArcPlayTermsOfServiceConsent) isUserEventSpecifics_UserConsent_Consent() {
}

func (*UserEventSpecifics_UserConsent_ArcMetricsAndUsageConsent) isUserEventSpecifics_UserConsent_Consent() {
}

func (*UserEventSpecifics_UserConsent_UnifiedConsent) isUserEventSpecifics_UserConsent_Consent() {}

func (m *UserEventSpecifics_UserConsent) GetConsent() isUserEventSpecifics_UserConsent_Consent {
	if m != nil {
		return m.Consent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetSyncConsent() *UserConsentTypes_SyncConsent {
	if x, ok := m.GetConsent().(*UserEventSpecifics_UserConsent_SyncConsent); ok {
		return x.SyncConsent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetArcBackupAndRestoreConsent() *UserConsentTypes_ArcBackupAndRestoreConsent {
	if x, ok := m.GetConsent().(*UserEventSpecifics_UserConsent_ArcBackupAndRestoreConsent); ok {
		return x.ArcBackupAndRestoreConsent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetArcLocationServiceConsent() *UserConsentTypes_ArcGoogleLocationServiceConsent {
	if x, ok := m.GetConsent().(*UserEventSpecifics_UserConsent_ArcLocationServiceConsent); ok {
		return x.ArcLocationServiceConsent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetArcPlayTermsOfServiceConsent() *UserConsentTypes_ArcPlayTermsOfServiceConsent {
	if x, ok := m.GetConsent().(*UserEventSpecifics_UserConsent_ArcPlayTermsOfServiceConsent); ok {
		return x.ArcPlayTermsOfServiceConsent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetArcMetricsAndUsageConsent() *UserConsentTypes_ArcMetricsAndUsageConsent {
	if x, ok := m.GetConsent().(*UserEventSpecifics_UserConsent_ArcMetricsAndUsageConsent); ok {
		return x.ArcMetricsAndUsageConsent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetUnifiedConsent() *UserConsentTypes_UnifiedConsent {
	if x, ok := m.GetConsent().(*UserEventSpecifics_UserConsent_UnifiedConsent); ok {
		return x.UnifiedConsent
	}
	return nil
}

func (m *UserEventSpecifics_UserConsent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

// Deprecated: Do not use.
func (m *UserEventSpecifics_UserConsent) GetFeature() UserEventSpecifics_UserConsent_Feature {
	if m != nil && m.Feature != nil {
		return *m.Feature
	}
	return UserEventSpecifics_UserConsent_FEATURE_UNSPECIFIED
}

// Deprecated: Do not use.
func (m *UserEventSpecifics_UserConsent) GetDescriptionGrdIds() []int32 {
	if m != nil {
		return m.DescriptionGrdIds
	}
	return nil
}

// Deprecated: Do not use.
func (m *UserEventSpecifics_UserConsent) GetConfirmationGrdId() int32 {
	if m != nil && m.ConfirmationGrdId != nil {
		return *m.ConfirmationGrdId
	}
	return 0
}

// Deprecated: Do not use.
func (m *UserEventSpecifics_UserConsent) GetStatus() UserConsentTypes_ConsentStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return UserConsentTypes_CONSENT_STATUS_UNSPECIFIED
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UserEventSpecifics_UserConsent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UserEventSpecifics_UserConsent_SyncConsent)(nil),
		(*UserEventSpecifics_UserConsent_ArcBackupAndRestoreConsent)(nil),
		(*UserEventSpecifics_UserConsent_ArcLocationServiceConsent)(nil),
		(*UserEventSpecifics_UserConsent_ArcPlayTermsOfServiceConsent)(nil),
		(*UserEventSpecifics_UserConsent_ArcMetricsAndUsageConsent)(nil),
		(*UserEventSpecifics_UserConsent_UnifiedConsent)(nil),
	}
}

// Logged when the user logs into Google, and at least once per 28d.
type UserEventSpecifics_GaiaPasswordCaptured struct {
	EventTrigger         *UserEventSpecifics_GaiaPasswordCaptured_EventTrigger `protobuf:"varint,1,opt,name=event_trigger,json=eventTrigger,enum=sync_pb.UserEventSpecifics_GaiaPasswordCaptured_EventTrigger" json:"event_trigger,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *UserEventSpecifics_GaiaPasswordCaptured) Reset() {
	*m = UserEventSpecifics_GaiaPasswordCaptured{}
}
func (m *UserEventSpecifics_GaiaPasswordCaptured) String() string { return proto.CompactTextString(m) }
func (*UserEventSpecifics_GaiaPasswordCaptured) ProtoMessage()    {}
func (*UserEventSpecifics_GaiaPasswordCaptured) Descriptor() ([]byte, []int) {
	return fileDescriptor_38ca968eeda06cfa, []int{0, 5}
}

func (m *UserEventSpecifics_GaiaPasswordCaptured) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventSpecifics_GaiaPasswordCaptured.Unmarshal(m, b)
}
func (m *UserEventSpecifics_GaiaPasswordCaptured) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventSpecifics_GaiaPasswordCaptured.Marshal(b, m, deterministic)
}
func (m *UserEventSpecifics_GaiaPasswordCaptured) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventSpecifics_GaiaPasswordCaptured.Merge(m, src)
}
func (m *UserEventSpecifics_GaiaPasswordCaptured) XXX_Size() int {
	return xxx_messageInfo_UserEventSpecifics_GaiaPasswordCaptured.Size(m)
}
func (m *UserEventSpecifics_GaiaPasswordCaptured) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventSpecifics_GaiaPasswordCaptured.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventSpecifics_GaiaPasswordCaptured proto.InternalMessageInfo

func (m *UserEventSpecifics_GaiaPasswordCaptured) GetEventTrigger() UserEventSpecifics_GaiaPasswordCaptured_EventTrigger {
	if m != nil && m.EventTrigger != nil {
		return *m.EventTrigger
	}
	return UserEventSpecifics_GaiaPasswordCaptured_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("sync_pb.UserEventSpecifics_Translation_Interaction", UserEventSpecifics_Translation_Interaction_name, UserEventSpecifics_Translation_Interaction_value)
	proto.RegisterEnum("sync_pb.UserEventSpecifics_UserConsent_Feature", UserEventSpecifics_UserConsent_Feature_name, UserEventSpecifics_UserConsent_Feature_value)
	proto.RegisterEnum("sync_pb.UserEventSpecifics_GaiaPasswordCaptured_EventTrigger", UserEventSpecifics_GaiaPasswordCaptured_EventTrigger_name, UserEventSpecifics_GaiaPasswordCaptured_EventTrigger_value)
	proto.RegisterType((*UserEventSpecifics)(nil), "sync_pb.UserEventSpecifics")
	proto.RegisterType((*UserEventSpecifics_Test)(nil), "sync_pb.UserEventSpecifics.Test")
	proto.RegisterType((*UserEventSpecifics_FieldTrial)(nil), "sync_pb.UserEventSpecifics.FieldTrial")
	proto.RegisterType((*UserEventSpecifics_LanguageDetection)(nil), "sync_pb.UserEventSpecifics.LanguageDetection")
	proto.RegisterType((*UserEventSpecifics_LanguageDetection_Language)(nil), "sync_pb.UserEventSpecifics.LanguageDetection.Language")
	proto.RegisterType((*UserEventSpecifics_Translation)(nil), "sync_pb.UserEventSpecifics.Translation")
	proto.RegisterType((*UserEventSpecifics_UserConsent)(nil), "sync_pb.UserEventSpecifics.UserConsent")
	proto.RegisterType((*UserEventSpecifics_GaiaPasswordCaptured)(nil), "sync_pb.UserEventSpecifics.GaiaPasswordCaptured")
}

func init() {
	proto.RegisterFile("user_event_specifics.proto", fileDescriptor_38ca968eeda06cfa)
}

var fileDescriptor_38ca968eeda06cfa = []byte{
	// 1338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xcd, 0x72, 0xdb, 0xb6,
	0x16, 0x96, 0x2c, 0x5b, 0xb2, 0x8e, 0x64, 0x9b, 0x86, 0x13, 0x47, 0xd1, 0x4d, 0x72, 0x7d, 0x7d,
	0x27, 0x89, 0x67, 0xda, 0xaa, 0xad, 0xd3, 0x49, 0xdb, 0x45, 0x17, 0x34, 0x45, 0x4b, 0x4c, 0x64,
	0x4a, 0x03, 0x52, 0x4e, 0xdd, 0x0d, 0x06, 0x26, 0x21, 0x85, 0x53, 0x8a, 0xd4, 0x10, 0x94, 0x33,
	0xee, 0x74, 0xd1, 0x6e, 0xfb, 0x3c, 0x7d, 0x86, 0x6e, 0xba, 0xec, 0x63, 0xf4, 0x25, 0x3a, 0x00,
	0x28, 0x89, 0x8e, 0x7f, 0x9a, 0x2c, 0x71, 0xbe, 0xf3, 0x7d, 0xdf, 0x01, 0x78, 0x70, 0x40, 0x68,
	0xce, 0x38, 0x4b, 0x08, 0xbb, 0x60, 0x51, 0x4a, 0xf8, 0x94, 0x79, 0xc1, 0x28, 0xf0, 0x78, 0x6b,
	0x9a, 0xc4, 0x69, 0x8c, 0x2a, 0xfc, 0x32, 0xf2, 0xc8, 0xf4, 0xbc, 0xd9, 0x90, 0x49, 0x5e, 0x1c,
	0x71, 0x91, 0x96, 0x5e, 0x4e, 0x59, 0x96, 0xd2, 0x7c, 0x38, 0xa6, 0x01, 0x25, 0x53, 0xca, 0xf9,
	0xbb, 0x38, 0xf1, 0x49, 0xc2, 0x66, 0x9c, 0x29, 0x68, 0xff, 0xef, 0x5d, 0x40, 0x43, 0xce, 0x12,
	0x53, 0x68, 0x3b, 0x73, 0x69, 0xf4, 0x0c, 0xb6, 0x94, 0x5b, 0x1a, 0x4c, 0x18, 0x99, 0x71, 0xe6,
	0x35, 0x8a, 0x7b, 0xc5, 0x83, 0x12, 0xde, 0x90, 0x61, 0x37, 0x98, 0xb0, 0x21, 0x67, 0x1e, 0xfa,
	0x3f, 0x6c, 0x44, 0xf4, 0x22, 0x18, 0xd3, 0x34, 0x88, 0x23, 0x12, 0xf8, 0x8d, 0x15, 0x99, 0x55,
	0x5f, 0x06, 0x2d, 0x1f, 0x3d, 0x06, 0xe0, 0x8c, 0xf3, 0x2c, 0xa3, 0xb4, 0x57, 0x3c, 0x28, 0xe3,
	0x6a, 0x16, 0xb1, 0x7c, 0xa4, 0x03, 0xa4, 0x8c, 0xa7, 0x6a, 0x7b, 0x8d, 0xf5, 0xbd, 0xe2, 0x41,
	0xed, 0x70, 0xaf, 0x95, 0xed, 0xaa, 0x75, 0xbd, 0xb8, 0x96, 0xcb, 0x78, 0xda, 0x2d, 0xe0, 0xaa,
	0x60, 0x49, 0x08, 0xb9, 0xb0, 0x3d, 0x0a, 0x58, 0xe8, 0x93, 0x34, 0x09, 0x68, 0x98, 0x29, 0x55,
	0xa5, 0xd2, 0xb3, 0xbb, 0x94, 0x8e, 0x05, 0xc9, 0x15, 0x9c, 0x6e, 0x01, 0x6f, 0x8d, 0x16, 0x2b,
	0xa5, 0x1a, 0x40, 0x23, 0xa4, 0xd1, 0x78, 0x46, 0xc7, 0x8c, 0xf8, 0x2c, 0x65, 0x9e, 0xdc, 0xa4,
	0x12, 0x07, 0x29, 0xfe, 0xd9, 0x5d, 0xe2, 0xbd, 0x8c, 0xdb, 0x9e, 0x53, 0xbb, 0x05, 0xbc, 0x1b,
	0xbe, 0x1f, 0x54, 0x56, 0xa7, 0xb0, 0x9d, 0x26, 0x34, 0xe2, 0x21, 0xcd, 0x79, 0xd4, 0xa4, 0xc7,
	0xf3, 0x3b, 0x8f, 0x62, 0x49, 0xea, 0x16, 0xb0, 0x96, 0xd3, 0x50, 0xba, 0x3d, 0xa8, 0xe7, 0xbb,
	0xa2, 0x51, 0xff, 0x77, 0x49, 0x11, 0x32, 0x54, 0x7a, 0xb7, 0x80, 0x6b, 0xb3, 0xe5, 0x12, 0xbd,
	0x81, 0x9b, 0x3a, 0x29, 0xab, 0xf6, 0xad, 0x94, 0x6e, 0x2e, 0xa4, 0x3b, 0x34, 0xa0, 0x83, 0x2c,
	0x11, 0x8b, 0x3c, 0xb1, 0xfd, 0xf1, 0xfb, 0x41, 0x55, 0x26, 0x87, 0x47, 0x57, 0x85, 0x3d, 0x3a,
	0x4d, 0x67, 0x09, 0xf3, 0x33, 0xed, 0x2d, 0xa9, 0xfd, 0xc5, 0x5d, 0x65, 0xe7, 0xed, 0x8c, 0x8c,
	0xdd, 0x2d, 0xe0, 0x87, 0xe3, 0x1b, 0xe2, 0x92, 0xda, 0x2c, 0xc3, 0xaa, 0xe8, 0xa4, 0xe6, 0x97,
	0x00, 0xcb, 0x3e, 0x10, 0x1d, 0x7d, 0x41, 0x93, 0x60, 0xde, 0xd0, 0xbc, 0x51, 0xdc, 0x2b, 0x1d,
	0x54, 0x70, 0x7d, 0x11, 0xb4, 0x7c, 0xde, 0xfc, 0x65, 0x05, 0xb6, 0xaf, 0x7d, 0x5e, 0xc4, 0x00,
	0xa9, 0x36, 0x61, 0x3e, 0x99, 0x7f, 0x67, 0xc5, 0xaf, 0x1d, 0xbe, 0xfc, 0xa8, 0x4e, 0x59, 0x44,
	0xf0, 0xf6, 0x5c, 0x71, 0x1e, 0xe1, 0xe8, 0x10, 0xee, 0x53, 0x3f, 0x9e, 0xe6, 0x5d, 0x88, 0x17,
	0xfb, 0x4c, 0xde, 0xbd, 0x2a, 0xde, 0xc9, 0xc0, 0x39, 0xc1, 0x88, 0x7d, 0xd6, 0x1c, 0xc0, 0xfa,
	0x7c, 0x2d, 0x76, 0x78, 0x95, 0x57, 0x94, 0xbc, 0x7a, 0x98, 0x23, 0xa0, 0xff, 0x42, 0x2d, 0xe0,
	0x24, 0x61, 0x61, 0x40, 0xcf, 0x43, 0x25, 0xbd, 0x8e, 0x21, 0xe0, 0x38, 0x8b, 0x34, 0x7f, 0x2b,
	0x41, 0x2d, 0xd7, 0x7d, 0xe8, 0x53, 0x40, 0xa3, 0x24, 0x9e, 0x90, 0x9b, 0xa4, 0x35, 0x81, 0xe4,
	0xeb, 0x41, 0x07, 0xa0, 0xa5, 0xf1, 0x8d, 0xe5, 0x6f, 0xa6, 0xf1, 0x95, 0xcc, 0x21, 0xd4, 0x82,
	0x28, 0x65, 0x09, 0x95, 0x07, 0x23, 0xa7, 0xc7, 0xe6, 0xe1, 0x8b, 0x0f, 0xbc, 0x13, 0x2d, 0x6b,
	0x49, 0xc5, 0x79, 0x9d, 0xfd, 0x3f, 0x8b, 0x50, 0xcb, 0x81, 0xa8, 0x06, 0x95, 0xa1, 0xfd, 0xda,
	0xee, 0xbf, 0xb1, 0xb5, 0x02, 0x02, 0x28, 0xeb, 0x86, 0x61, 0x0e, 0x5c, 0xad, 0x28, 0x80, 0xb6,
	0x69, 0xf4, 0x2c, 0xdb, 0xd4, 0x56, 0xc4, 0xc2, 0xea, 0xd8, 0x7d, 0x6c, 0xb6, 0xb5, 0x12, 0xda,
	0x80, 0x6a, 0xdb, 0x72, 0x4e, 0x2c, 0xc7, 0x31, 0xdb, 0xda, 0xaa, 0x20, 0x9d, 0xe8, 0xf6, 0x50,
	0xef, 0x69, 0x6b, 0xa8, 0x01, 0xf7, 0x5c, 0xac, 0xdb, 0x4e, 0x4f, 0x77, 0xad, 0xbe, 0x4d, 0xb0,
	0x79, 0x6a, 0x62, 0xd7, 0x6c, 0x6b, 0x65, 0xf4, 0x08, 0x1a, 0xfa, 0xd0, 0xed, 0x93, 0x3c, 0x7c,
	0x74, 0x46, 0x06, 0xd8, 0x3c, 0xd6, 0x2a, 0xb7, 0xa1, 0x3d, 0xcb, 0x7e, 0xad, 0xad, 0x0b, 0x55,
	0xcb, 0xb6, 0x5c, 0x4b, 0xef, 0x59, 0x3f, 0x28, 0xcc, 0xc4, 0xb8, 0x8f, 0xb5, 0x6a, 0xf3, 0xaf,
	0x2a, 0xd4, 0x72, 0xf7, 0x16, 0xed, 0x42, 0x39, 0x8c, 0x3d, 0x1a, 0xb2, 0xc6, 0xaa, 0x3c, 0xd4,
	0x6c, 0x85, 0xbe, 0x86, 0x86, 0x17, 0x06, 0x62, 0xae, 0x2f, 0x9e, 0x89, 0xc5, 0x7c, 0xaf, 0xcb,
	0xc9, 0x7d, 0x5f, 0xe1, 0x99, 0xd0, 0x62, 0xce, 0xbf, 0x82, 0xba, 0x3c, 0xf1, 0xf9, 0x1c, 0xa9,
	0xc8, 0x0b, 0xf9, 0xf4, 0xca, 0x67, 0x98, 0x73, 0xe4, 0xc3, 0xe3, 0x5c, 0x46, 0x5e, 0x6e, 0x8a,
	0xf0, 0xe5, 0x12, 0xfd, 0x04, 0x4f, 0x68, 0xe2, 0x91, 0x73, 0xea, 0xfd, 0x38, 0x9b, 0x12, 0x1a,
	0x89, 0x31, 0xc2, 0xd3, 0x38, 0x61, 0x0b, 0x75, 0xf5, 0x06, 0x7c, 0x75, 0xbb, 0xba, 0x9e, 0x78,
	0x47, 0x92, 0xae, 0x47, 0x3e, 0x56, 0xe4, 0xa5, 0x59, 0x93, 0xde, 0x8a, 0xa2, 0x9f, 0xe1, 0x91,
	0xf0, 0x16, 0xc7, 0x21, 0x2f, 0x38, 0x67, 0xc9, 0x45, 0xe0, 0x2d, 0x9d, 0xd5, 0x9b, 0xf1, 0xed,
	0x9d, 0xce, 0x9d, 0x38, 0x1e, 0x87, 0xac, 0x97, 0x49, 0x38, 0x4a, 0x61, 0x69, 0xff, 0x90, 0x26,
	0xde, 0xcd, 0x20, 0xfa, 0xb5, 0x08, 0xff, 0x13, 0xf6, 0xd3, 0x90, 0x5e, 0x92, 0x94, 0x25, 0x13,
	0x4e, 0xe2, 0xd1, 0xb5, 0x1a, 0xd4, 0xd3, 0xf2, 0xf2, 0xce, 0x1a, 0x06, 0x21, 0xbd, 0x74, 0x85,
	0x40, 0x7f, 0x74, 0xad, 0x00, 0xb1, 0xc3, 0x5b, 0x71, 0xf4, 0x0e, 0x1e, 0x8b, 0x12, 0x26, 0x2c,
	0x4d, 0x02, 0x8f, 0xcb, 0xe3, 0x9f, 0x71, 0x75, 0x07, 0x95, 0xbd, 0x7a, 0x75, 0x5e, 0xdc, 0x69,
	0x7f, 0xa2, 0xd8, 0x7a, 0xe4, 0x0f, 0xb9, 0xbc, 0xa8, 0xf9, 0xcd, 0xdf, 0x0c, 0x22, 0x07, 0xb6,
	0x66, 0x51, 0x30, 0x0a, 0x98, 0xbf, 0xb0, 0xda, 0x90, 0x56, 0x07, 0xb7, 0x5b, 0x0d, 0x15, 0x61,
	0xa9, 0xbf, 0x39, 0xbb, 0x12, 0x11, 0xbf, 0x16, 0xd4, 0xf3, 0xe2, 0x59, 0x94, 0x8a, 0x5f, 0x8b,
	0xb2, 0x6c, 0xf6, 0x6a, 0x16, 0xb1, 0x7c, 0x74, 0x02, 0x95, 0x11, 0xa3, 0x62, 0xe6, 0xcb, 0x49,
	0xb4, 0x79, 0xf8, 0xf9, 0x07, 0xbe, 0x7c, 0xad, 0x63, 0x45, 0x3b, 0x5a, 0x69, 0x14, 0xf1, 0x5c,
	0x03, 0x1d, 0xc2, 0x8e, 0xcf, 0xb8, 0x97, 0x04, 0x53, 0xd9, 0x3c, 0xe3, 0xc4, 0x97, 0x2f, 0xc4,
	0xca, 0x5e, 0xe9, 0x60, 0x4d, 0x66, 0x6e, 0xe7, 0xe0, 0x4e, 0xe2, 0x5b, 0xbe, 0x98, 0xd6, 0x3b,
	0x5e, 0x1c, 0x8d, 0x82, 0x64, 0x42, 0x73, 0x24, 0x39, 0xc7, 0x32, 0x4e, 0x1e, 0x96, 0x24, 0x64,
	0x40, 0x99, 0xa7, 0x34, 0x9d, 0xf1, 0xc6, 0x9a, 0xac, 0xfa, 0xf9, 0xed, 0x27, 0x94, 0x2d, 0x1c,
	0x99, 0x2e, 0xf5, 0x32, 0xea, 0xfe, 0xef, 0x45, 0xa8, 0x64, 0xbb, 0x40, 0x0f, 0x60, 0xe7, 0xd8,
	0xd4, 0xdd, 0x21, 0x36, 0xc9, 0xd0, 0x76, 0x06, 0xa6, 0x61, 0x1d, 0x5b, 0x66, 0x5b, 0x2b, 0xa0,
	0x2d, 0xa8, 0x19, 0x5d, 0xdc, 0x3f, 0x31, 0x89, 0x73, 0x66, 0x1b, 0x5a, 0x11, 0x6d, 0x02, 0x0c,
	0x7a, 0xfa, 0x19, 0x71, 0xdc, 0x3e, 0x16, 0x13, 0x6f, 0x17, 0xd0, 0x91, 0x6e, 0xbc, 0x1e, 0x0e,
	0x88, 0x6e, 0xb7, 0x09, 0x36, 0x55, 0xbc, 0x84, 0xfe, 0x03, 0x0f, 0x3a, 0xfd, 0x7e, 0xa7, 0x67,
	0x92, 0x5e, 0xdf, 0x50, 0xc3, 0xc8, 0x31, 0xf1, 0xa9, 0x65, 0x98, 0xda, 0x2a, 0x6a, 0xc2, 0x6e,
	0xa6, 0x3a, 0xb4, 0xa5, 0x13, 0x31, 0xfa, 0xb6, 0x63, 0xda, 0xae, 0xb6, 0x86, 0x9e, 0x40, 0x53,
	0x77, 0x1c, 0xcb, 0x71, 0x75, 0xdb, 0x25, 0xba, 0xe1, 0x5a, 0xa7, 0x96, 0x7b, 0x26, 0x70, 0x17,
	0xf7, 0x7b, 0x5a, 0xf9, 0xa8, 0x0a, 0x95, 0xac, 0x3d, 0x9a, 0x7f, 0x14, 0xe1, 0xde, 0x4d, 0xcf,
	0x3a, 0x3a, 0x87, 0x8d, 0xec, 0xef, 0x34, 0x09, 0xc6, 0x63, 0x96, 0x64, 0x1f, 0xf7, 0xbb, 0x8f,
	0xfd, 0x3f, 0x68, 0xc9, 0x1c, 0x57, 0x89, 0xe0, 0x3a, 0xcb, 0xad, 0xf6, 0x5f, 0x41, 0x3d, 0x8f,
	0x8a, 0x93, 0xba, 0x7a, 0x74, 0x08, 0x36, 0x87, 0x8e, 0x89, 0x49, 0xaf, 0xdf, 0xe9, 0x98, 0x6d,
	0x62, 0xd9, 0x5a, 0x11, 0xdd, 0x87, 0x6d, 0xf3, 0xfb, 0x81, 0x85, 0xcd, 0x36, 0x39, 0xfc, 0xa6,
	0x4d, 0x5c, 0xeb, 0xc4, 0xc4, 0xda, 0xca, 0x51, 0x05, 0xd6, 0xa4, 0xf6, 0xd1, 0x27, 0xf0, 0x34,
	0x4e, 0xc6, 0x2d, 0xef, 0x6d, 0x12, 0x4f, 0x82, 0xd9, 0xa4, 0xe5, 0xc5, 0x93, 0x69, 0x1c, 0xb1,
	0x28, 0xe5, 0xb2, 0x74, 0xf5, 0x4f, 0xee, 0xc5, 0x61, 0xb7, 0x34, 0x28, 0xfe, 0x13, 0x00, 0x00,
	0xff, 0xff, 0x68, 0xe3, 0x1e, 0x3a, 0xf5, 0x0b, 0x00, 0x00,
}
